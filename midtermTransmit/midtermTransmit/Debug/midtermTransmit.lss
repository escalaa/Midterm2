
midtermTransmit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  000017ca  0000185e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017ca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001b  0080012a  0080012a  00001888  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001888  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000018e4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  00001924  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001cd4  00000000  00000000  00001a44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ae3  00000000  00000000  00003718  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009af  00000000  00000000  000041fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003ac  00000000  00000000  00004bac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000075c  00000000  00000000  00004f58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fc8  00000000  00000000  000056b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  0000667c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
       4:	0c 94 20 02 	jmp	0x440	; 0x440 <__vector_1>
       8:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
       c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      10:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      14:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      18:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      1c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      20:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      24:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      28:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      2c:	0c 94 11 02 	jmp	0x422	; 0x422 <__vector_11>
      30:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      34:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      38:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      3c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      40:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      44:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      48:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      4c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      50:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      54:	0c 94 c9 01 	jmp	0x392	; 0x392 <__vector_21>
      58:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      5c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      60:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      64:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 40       	sbci	r16, 0x00	; 0
      6a:	7a 10       	cpse	r7, r10
      6c:	f3 5a       	subi	r31, 0xA3	; 163
      6e:	00 a0       	ldd	r0, Z+32	; 0x20
      70:	72 4e       	sbci	r23, 0xE2	; 226
      72:	18 09       	sbc	r17, r8
      74:	00 10       	cpse	r0, r0
      76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__fp_splitA+0xa>
      78:	e8 00       	.word	0x00e8	; ????
      7a:	00 e8       	ldi	r16, 0x80	; 128
      7c:	76 48       	sbci	r23, 0x86	; 134
      7e:	17 00       	.word	0x0017	; ????
      80:	00 e4       	ldi	r16, 0x40	; 64
      82:	0b 54       	subi	r16, 0x4B	; 75
      84:	02 00       	.word	0x0002	; ????
      86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
      88:	9a 3b       	cpi	r25, 0xBA	; 186
      8a:	00 00       	nop
      8c:	00 e1       	ldi	r16, 0x10	; 16
      8e:	f5 05       	cpc	r31, r5
      90:	00 00       	nop
      92:	80 96       	adiw	r24, 0x20	; 32
      94:	98 00       	.word	0x0098	; ????
      96:	00 00       	nop
      98:	40 42       	sbci	r20, 0x20	; 32
      9a:	0f 00       	.word	0x000f	; ????
      9c:	00 00       	nop
      9e:	a0 86       	std	Z+8, r10	; 0x08
      a0:	01 00       	.word	0x0001	; ????
      a2:	00 00       	nop
      a4:	10 27       	eor	r17, r16
      a6:	00 00       	nop
      a8:	00 00       	nop
      aa:	e8 03       	fmulsu	r22, r16
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	64 00       	.word	0x0064	; ????
      b2:	00 00       	nop
      b4:	00 00       	nop
      b6:	0a 00       	.word	0x000a	; ????
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	01 00       	.word	0x0001	; ????
      be:	00 00       	nop
      c0:	00 00       	nop
      c2:	2c 76       	andi	r18, 0x6C	; 108
      c4:	d8 88       	ldd	r13, Y+16	; 0x10
      c6:	dc 67       	ori	r29, 0x7C	; 124
      c8:	4f 08       	sbc	r4, r15
      ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
      cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
      ce:	ae 59       	subi	r26, 0x9E	; 158
      d0:	e1 b1       	in	r30, 0x01	; 1
      d2:	b7 96       	adiw	r30, 0x27	; 39
      d4:	e5 e3       	ldi	r30, 0x35	; 53
      d6:	e4 53       	subi	r30, 0x34	; 52
      d8:	c6 3a       	cpi	r28, 0xA6	; 166
      da:	e6 51       	subi	r30, 0x16	; 22
      dc:	99 76       	andi	r25, 0x69	; 105
      de:	96 e8       	ldi	r25, 0x86	; 134
      e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <nRF24L01_begin+0x154>
      e2:	84 26       	eor	r8, r20
      e4:	eb 89       	ldd	r30, Y+19	; 0x13
      e6:	8c 9b       	sbis	0x11, 4	; 17
      e8:	62 ed       	ldi	r22, 0xD2	; 210
      ea:	40 7c       	andi	r20, 0xC0	; 192
      ec:	6f fc       	.word	0xfc6f	; ????
      ee:	ef bc       	out	0x2f, r14	; 47
      f0:	9c 9f       	mul	r25, r28
      f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
      f4:	ba a5       	ldd	r27, Y+42	; 0x2a
      f6:	6f a5       	ldd	r22, Y+47	; 0x2f
      f8:	f4 90       	lpm	r15, Z
      fa:	05 5a       	subi	r16, 0xA5	; 165
      fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
      fe:	5c 93       	st	X, r21
     100:	6b 6c       	ori	r22, 0xCB	; 203
     102:	f9 67       	ori	r31, 0x79	; 121
     104:	6d c1       	rjmp	.+730    	; 0x3e0 <__vector_21+0x4e>
     106:	1b fc       	.word	0xfc1b	; ????
     108:	e0 e4       	ldi	r30, 0x40	; 64
     10a:	0d 47       	sbci	r16, 0x7D	; 125
     10c:	fe f5       	brtc	.+126    	; 0x18c <.do_clear_bss_loop>
     10e:	20 e6       	ldi	r18, 0x60	; 96
     110:	b5 00       	.word	0x00b5	; ????
     112:	d0 ed       	ldi	r29, 0xD0	; 208
     114:	90 2e       	mov	r9, r16
     116:	03 00       	.word	0x0003	; ????
     118:	94 35       	cpi	r25, 0x54	; 84
     11a:	77 05       	cpc	r23, r7
     11c:	00 80       	ld	r0, Z
     11e:	84 1e       	adc	r8, r20
     120:	08 00       	.word	0x0008	; ????
     122:	00 20       	and	r0, r0
     124:	4e 0a       	sbc	r4, r30
     126:	00 00       	nop
     128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
     12a:	0c 33       	cpi	r16, 0x3C	; 60
     12c:	33 33       	cpi	r19, 0x33	; 51
     12e:	33 0f       	add	r19, r19
     130:	98 6e       	ori	r25, 0xE8	; 232
     132:	12 83       	std	Z+2, r17	; 0x02
     134:	11 41       	sbci	r17, 0x11	; 17
     136:	ef 8d       	ldd	r30, Y+31	; 0x1f
     138:	21 14       	cp	r2, r1
     13a:	89 3b       	cpi	r24, 0xB9	; 185
     13c:	e6 55       	subi	r30, 0x56	; 86
     13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
     140:	fe e6       	ldi	r31, 0x6E	; 110
     142:	db 18       	sub	r13, r11
     144:	d1 84       	ldd	r13, Z+9	; 0x09
     146:	4b 38       	cpi	r20, 0x8B	; 139
     148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
     14a:	7c 1d       	adc	r23, r12
     14c:	90 1d       	adc	r25, r0
     14e:	a4 bb       	out	0x14, r26	; 20
     150:	e4 24       	eor	r14, r4
     152:	20 32       	cpi	r18, 0x20	; 32
     154:	84 72       	andi	r24, 0x24	; 36
     156:	5e 22       	and	r5, r30
     158:	81 00       	.word	0x0081	; ????
     15a:	c9 f1       	breq	.+114    	; 0x1ce <setup_rf+0xa>
     15c:	24 ec       	ldi	r18, 0xC4	; 196
     15e:	a1 e5       	ldi	r26, 0x51	; 81
     160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
     162:	11 24       	eor	r1, r1
     164:	1f be       	out	0x3f, r1	; 63
     166:	cf ef       	ldi	r28, 0xFF	; 255
     168:	d8 e0       	ldi	r29, 0x08	; 8
     16a:	de bf       	out	0x3e, r29	; 62
     16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
     16e:	11 e0       	ldi	r17, 0x01	; 1
     170:	a0 e0       	ldi	r26, 0x00	; 0
     172:	b1 e0       	ldi	r27, 0x01	; 1
     174:	ea ec       	ldi	r30, 0xCA	; 202
     176:	f7 e1       	ldi	r31, 0x17	; 23
     178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
     17a:	05 90       	lpm	r0, Z+
     17c:	0d 92       	st	X+, r0
     17e:	aa 32       	cpi	r26, 0x2A	; 42
     180:	b1 07       	cpc	r27, r17
     182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
     184:	21 e0       	ldi	r18, 0x01	; 1
     186:	aa e2       	ldi	r26, 0x2A	; 42
     188:	b1 e0       	ldi	r27, 0x01	; 1
     18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
     18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
     18e:	a5 34       	cpi	r26, 0x45	; 69
     190:	b2 07       	cpc	r27, r18
     192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>
     194:	0e 94 4e 01 	call	0x29c	; 0x29c <main>
     198:	0c 94 e3 0b 	jmp	0x17c6	; 0x17c6 <_exit>

0000019c <__bad_interrupt>:
     19c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a0 <uart_putchar>:
}

void USARTsend(unsigned char Data) // function for sending data to the stream
{
	while (!(UCSR0A & (1<<UDRE0))); 
	UDR0=Data;
     1a0:	cf 93       	push	r28
     1a2:	c8 2f       	mov	r28, r24
     1a4:	8a 30       	cpi	r24, 0x0A	; 10
     1a6:	19 f4       	brne	.+6      	; 0x1ae <uart_putchar+0xe>
     1a8:	8d e0       	ldi	r24, 0x0D	; 13
     1aa:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <uart_putchar>
     1ae:	e0 ec       	ldi	r30, 0xC0	; 192
     1b0:	f0 e0       	ldi	r31, 0x00	; 0
     1b2:	80 81       	ld	r24, Z
     1b4:	85 ff       	sbrs	r24, 5
     1b6:	fd cf       	rjmp	.-6      	; 0x1b2 <uart_putchar+0x12>
     1b8:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     1bc:	80 e0       	ldi	r24, 0x00	; 0
     1be:	90 e0       	ldi	r25, 0x00	; 0
     1c0:	cf 91       	pop	r28
     1c2:	08 95       	ret

000001c4 <setup_rf>:
     1c4:	cf 93       	push	r28
     1c6:	df 93       	push	r29
     1c8:	0e 94 3b 02 	call	0x476	; 0x476 <nRF24L01_init>
     1cc:	ec 01       	movw	r28, r24
     1ce:	85 e2       	ldi	r24, 0x25	; 37
     1d0:	90 e0       	ldi	r25, 0x00	; 0
     1d2:	99 83       	std	Y+1, r25	; 0x01
     1d4:	88 83       	st	Y, r24
     1d6:	22 e0       	ldi	r18, 0x02	; 2
     1d8:	2a 83       	std	Y+2, r18	; 0x02
     1da:	9c 83       	std	Y+4, r25	; 0x04
     1dc:	8b 83       	std	Y+3, r24	; 0x03
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	2d 83       	std	Y+5, r18	; 0x05
     1e2:	9f 83       	std	Y+7, r25	; 0x07
     1e4:	8e 83       	std	Y+6, r24	; 0x06
     1e6:	25 e0       	ldi	r18, 0x05	; 5
     1e8:	28 87       	std	Y+8, r18	; 0x08
     1ea:	9a 87       	std	Y+10, r25	; 0x0a
     1ec:	89 87       	std	Y+9, r24	; 0x09
     1ee:	23 e0       	ldi	r18, 0x03	; 3
     1f0:	2b 87       	std	Y+11, r18	; 0x0b
     1f2:	9d 87       	std	Y+13, r25	; 0x0d
     1f4:	8c 87       	std	Y+12, r24	; 0x0c
     1f6:	84 e0       	ldi	r24, 0x04	; 4
     1f8:	8e 87       	std	Y+14, r24	; 0x0e
     1fa:	e9 e6       	ldi	r30, 0x69	; 105
     1fc:	f0 e0       	ldi	r31, 0x00	; 0
     1fe:	80 81       	ld	r24, Z
     200:	82 60       	ori	r24, 0x02	; 2
     202:	80 83       	st	Z, r24
     204:	e8 9a       	sbi	0x1d, 0	; 29
     206:	ce 01       	movw	r24, r28
     208:	0e 94 ad 02 	call	0x55a	; 0x55a <nRF24L01_begin>
     20c:	ce 01       	movw	r24, r28
     20e:	df 91       	pop	r29
     210:	cf 91       	pop	r28
     212:	08 95       	ret

00000214 <setup_timer>:
     214:	e1 e8       	ldi	r30, 0x81	; 129
     216:	f0 e0       	ldi	r31, 0x00	; 0
     218:	80 81       	ld	r24, Z
     21a:	88 60       	ori	r24, 0x08	; 8
     21c:	80 83       	st	Z, r24
     21e:	af e6       	ldi	r26, 0x6F	; 111
     220:	b0 e0       	ldi	r27, 0x00	; 0
     222:	8c 91       	ld	r24, X
     224:	82 60       	ori	r24, 0x02	; 2
     226:	8c 93       	st	X, r24
     228:	88 e0       	ldi	r24, 0x08	; 8
     22a:	9d e3       	ldi	r25, 0x3D	; 61
     22c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     230:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     234:	80 81       	ld	r24, Z
     236:	83 60       	ori	r24, 0x03	; 3
     238:	80 83       	st	Z, r24
     23a:	08 95       	ret

0000023c <USARTinit>:
     23c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     240:	87 e6       	ldi	r24, 0x67	; 103
     242:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     246:	e1 ec       	ldi	r30, 0xC1	; 193
     248:	f0 e0       	ldi	r31, 0x00	; 0
     24a:	80 81       	ld	r24, Z
     24c:	88 61       	ori	r24, 0x18	; 24
     24e:	80 83       	st	Z, r24
     250:	80 81       	ld	r24, Z
     252:	80 68       	ori	r24, 0x80	; 128
     254:	80 83       	st	Z, r24
     256:	86 e0       	ldi	r24, 0x06	; 6
     258:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     25c:	86 e0       	ldi	r24, 0x06	; 6
     25e:	91 e0       	ldi	r25, 0x01	; 1
     260:	90 93 42 01 	sts	0x0142, r25	; 0x800142 <__iob+0x3>
     264:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <__iob+0x2>
     268:	08 95       	ret

0000026a <ADCinit>:
}

void ADCinit(void)
{
	ADMUX |= (1 << REFS0);	//use AVcc as ref
     26a:	ec e7       	ldi	r30, 0x7C	; 124
     26c:	f0 e0       	ldi	r31, 0x00	; 0
     26e:	80 81       	ld	r24, Z
     270:	80 64       	ori	r24, 0x40	; 64
     272:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); // 128 Prescale for 16MHz
     274:	ea e7       	ldi	r30, 0x7A	; 122
     276:	f0 e0       	ldi	r31, 0x00	; 0
     278:	80 81       	ld	r24, Z
     27a:	87 60       	ori	r24, 0x07	; 7
     27c:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADATE); // Set ADC Auto Trigger Enable
     27e:	80 81       	ld	r24, Z
     280:	80 62       	ori	r24, 0x20	; 32
     282:	80 83       	st	Z, r24
	ADCSRB = 0; // Free running mode
     284:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
	ADCSRA |= (1 << ADEN); // Enable the ADC
     288:	80 81       	ld	r24, Z
     28a:	80 68       	ori	r24, 0x80	; 128
     28c:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADIE); // Enable interrupts	
     28e:	80 81       	ld	r24, Z
     290:	88 60       	ori	r24, 0x08	; 8
     292:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC); // start conversion
     294:	80 81       	ld	r24, Z
     296:	80 64       	ori	r24, 0x40	; 64
     298:	80 83       	st	Z, r24
     29a:	08 95       	ret

0000029c <main>:
volatile float temp;
char c[10];
volatile uint8_t ADCvalue;
volatile bool rf_interrupt = false;
volatile bool send_message = false;
int main(void) {
     29c:	cf 93       	push	r28
     29e:	df 93       	push	r29
     2a0:	cd b7       	in	r28, 0x3d	; 61
     2a2:	de b7       	in	r29, 0x3e	; 62
     2a4:	a8 97       	sbiw	r28, 0x28	; 40
     2a6:	0f b6       	in	r0, 0x3f	; 63
     2a8:	f8 94       	cli
     2aa:	de bf       	out	0x3e, r29	; 62
     2ac:	0f be       	out	0x3f, r0	; 63
     2ae:	cd bf       	out	0x3d, r28	; 61
	uint8_t to_address[5] = { 0x01, 0x01, 0x01, 0x01, 0x01 };
     2b0:	85 e0       	ldi	r24, 0x05	; 5
     2b2:	e4 e1       	ldi	r30, 0x14	; 20
     2b4:	f1 e0       	ldi	r31, 0x01	; 1
     2b6:	de 01       	movw	r26, r28
     2b8:	11 96       	adiw	r26, 0x01	; 1
     2ba:	01 90       	ld	r0, Z+
     2bc:	0d 92       	st	X+, r0
     2be:	8a 95       	dec	r24
     2c0:	e1 f7       	brne	.-8      	; 0x2ba <main+0x1e>
	USARTinit();
     2c2:	0e 94 1e 01 	call	0x23c	; 0x23c <USARTinit>
	ADCinit();
     2c6:	0e 94 35 01 	call	0x26a	; 0x26a <ADCinit>
	bool on = false;
	sei();
     2ca:	78 94       	sei
	nRF24L01 *rf = setup_rf();
     2cc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <setup_rf>
     2d0:	7c 01       	movw	r14, r24
	setup_timer();
     2d2:	0e 94 0a 01 	call	0x214	; 0x214 <setup_timer>
volatile bool send_message = false;
int main(void) {
	uint8_t to_address[5] = { 0x01, 0x01, 0x01, 0x01, 0x01 };
	USARTinit();
	ADCinit();
	bool on = false;
     2d6:	91 2c       	mov	r9, r1
		if (success != 0)
			nRF24L01_flush_transmit_message(rf);
		}
		if (send_message) {
			send_message = false;
			on = !on;
     2d8:	88 24       	eor	r8, r8
     2da:	83 94       	inc	r8
			nRF24L01Message msg;
			
			
			if (on){ 
				dtostrf(temp,3,0,c);
				printf("Temperature: %s\n", c);
     2dc:	0f 2e       	mov	r0, r31
     2de:	f9 e1       	ldi	r31, 0x19	; 25
     2e0:	af 2e       	mov	r10, r31
     2e2:	f1 e0       	ldi	r31, 0x01	; 1
     2e4:	bf 2e       	mov	r11, r31
     2e6:	f0 2d       	mov	r31, r0
				memcpy(msg.data, c, 3);
     2e8:	6e 01       	movw	r12, r28
     2ea:	28 e0       	ldi	r18, 0x08	; 8
     2ec:	c2 0e       	add	r12, r18
     2ee:	d1 1c       	adc	r13, r1
	bool on = false;
	sei();
	nRF24L01 *rf = setup_rf();
	setup_timer();
	while (true) {
	if (rf_interrupt) {
     2f0:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <rf_interrupt>
     2f4:	88 23       	and	r24, r24
     2f6:	51 f0       	breq	.+20     	; 0x30c <main+0x70>
		rf_interrupt = false;
     2f8:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <rf_interrupt>
		int success = nRF24L01_transmit_success(rf);
     2fc:	c7 01       	movw	r24, r14
     2fe:	0e 94 15 04 	call	0x82a	; 0x82a <nRF24L01_transmit_success>
		if (success != 0)
     302:	89 2b       	or	r24, r25
     304:	19 f0       	breq	.+6      	; 0x30c <main+0x70>
			nRF24L01_flush_transmit_message(rf);
     306:	c7 01       	movw	r24, r14
     308:	0e 94 92 02 	call	0x524	; 0x524 <nRF24L01_flush_transmit_message>
		}
		if (send_message) {
     30c:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__data_end>
     310:	88 23       	and	r24, r24
     312:	71 f3       	breq	.-36     	; 0x2f0 <main+0x54>
			send_message = false;
     314:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <__data_end>
			on = !on;
     318:	98 24       	eor	r9, r8
			nRF24L01Message msg;
			
			
			if (on){ 
     31a:	59 f1       	breq	.+86     	; 0x372 <main+0xd6>
				dtostrf(temp,3,0,c);
     31c:	60 91 2c 01 	lds	r22, 0x012C	; 0x80012c <temp>
     320:	70 91 2d 01 	lds	r23, 0x012D	; 0x80012d <temp+0x1>
     324:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <temp+0x2>
     328:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <temp+0x3>
     32c:	00 e3       	ldi	r16, 0x30	; 48
     32e:	11 e0       	ldi	r17, 0x01	; 1
     330:	20 e0       	ldi	r18, 0x00	; 0
     332:	43 e0       	ldi	r20, 0x03	; 3
     334:	0e 94 92 05 	call	0xb24	; 0xb24 <dtostrf>
				printf("Temperature: %s\n", c);
     338:	1f 93       	push	r17
     33a:	0f 93       	push	r16
     33c:	bf 92       	push	r11
     33e:	af 92       	push	r10
     340:	0e 94 d3 06 	call	0xda6	; 0xda6 <printf>
				memcpy(msg.data, c, 3);
     344:	f8 01       	movw	r30, r16
     346:	80 81       	ld	r24, Z
     348:	91 81       	ldd	r25, Z+1	; 0x01
     34a:	f6 01       	movw	r30, r12
     34c:	91 83       	std	Z+1, r25	; 0x01
     34e:	80 83       	st	Z, r24
     350:	f8 01       	movw	r30, r16
     352:	82 81       	ldd	r24, Z+2	; 0x02
     354:	f6 01       	movw	r30, r12
     356:	82 83       	std	Z+2, r24	; 0x02
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     358:	ff ef       	ldi	r31, 0xFF	; 255
     35a:	23 ed       	ldi	r18, 0xD3	; 211
     35c:	80 e3       	ldi	r24, 0x30	; 48
     35e:	f1 50       	subi	r31, 0x01	; 1
     360:	20 40       	sbci	r18, 0x00	; 0
     362:	80 40       	sbci	r24, 0x00	; 0
     364:	e1 f7       	brne	.-8      	; 0x35e <main+0xc2>
     366:	00 c0       	rjmp	.+0      	; 0x368 <main+0xcc>
     368:	00 00       	nop
     36a:	0f 90       	pop	r0
     36c:	0f 90       	pop	r0
     36e:	0f 90       	pop	r0
     370:	0f 90       	pop	r0
				_delay_ms(1000);
			}
			msg.length = strlen((char *)msg.data) + 1;
     372:	f6 01       	movw	r30, r12
     374:	01 90       	ld	r0, Z+
     376:	00 20       	and	r0, r0
     378:	e9 f7       	brne	.-6      	; 0x374 <main+0xd8>
     37a:	ec 19       	sub	r30, r12
     37c:	e8 a7       	std	Y+40, r30	; 0x28
			nRF24L01_transmit(rf, to_address, &msg);
     37e:	ae 01       	movw	r20, r28
     380:	4a 5f       	subi	r20, 0xFA	; 250
     382:	5f 4f       	sbci	r21, 0xFF	; 255
     384:	be 01       	movw	r22, r28
     386:	6f 5f       	subi	r22, 0xFF	; 255
     388:	7f 4f       	sbci	r23, 0xFF	; 255
     38a:	c7 01       	movw	r24, r14
     38c:	0e 94 a5 03 	call	0x74a	; 0x74a <nRF24L01_transmit>
     390:	af cf       	rjmp	.-162    	; 0x2f0 <main+0x54>

00000392 <__vector_21>:
	ADCSRA |= (1 << ADIE); // Enable interrupts	
	ADCSRA |= (1 << ADSC); // start conversion
}

ISR (ADC_vect)
{
     392:	1f 92       	push	r1
     394:	0f 92       	push	r0
     396:	0f b6       	in	r0, 0x3f	; 63
     398:	0f 92       	push	r0
     39a:	11 24       	eor	r1, r1
     39c:	2f 93       	push	r18
     39e:	3f 93       	push	r19
     3a0:	4f 93       	push	r20
     3a2:	5f 93       	push	r21
     3a4:	6f 93       	push	r22
     3a6:	7f 93       	push	r23
     3a8:	8f 93       	push	r24
     3aa:	9f 93       	push	r25
     3ac:	af 93       	push	r26
     3ae:	bf 93       	push	r27
     3b0:	ef 93       	push	r30
     3b2:	ff 93       	push	r31
	/*
	convert the read ADCvalue to temperature
	500.0=>(Vref * 100)=>(5V * 100)
	divide by 1024, the max for the ADC values (0-1024)
	*/
	ADCvalue = ADC; 
     3b4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     3b8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     3bc:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <ADCvalue>
	ADCvalue = (ADCvalue)*(500.0/1024.0);
     3c0:	60 91 3a 01 	lds	r22, 0x013A	; 0x80013a <ADCvalue>
     3c4:	70 e0       	ldi	r23, 0x00	; 0
     3c6:	80 e0       	ldi	r24, 0x00	; 0
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	0e 94 99 04 	call	0x932	; 0x932 <__floatsisf>
     3ce:	20 e0       	ldi	r18, 0x00	; 0
     3d0:	30 e0       	ldi	r19, 0x00	; 0
     3d2:	4a ef       	ldi	r20, 0xFA	; 250
     3d4:	5e e3       	ldi	r21, 0x3E	; 62
     3d6:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__mulsf3>
     3da:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__fixunssfsi>
     3de:	60 93 3a 01 	sts	0x013A, r22	; 0x80013a <ADCvalue>
	
	/* converts value into ascii */
	temp = ADCvalue;
     3e2:	60 91 3a 01 	lds	r22, 0x013A	; 0x80013a <ADCvalue>
     3e6:	70 e0       	ldi	r23, 0x00	; 0
     3e8:	80 e0       	ldi	r24, 0x00	; 0
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	0e 94 97 04 	call	0x92e	; 0x92e <__floatunsisf>
     3f0:	60 93 2c 01 	sts	0x012C, r22	; 0x80012c <temp>
     3f4:	70 93 2d 01 	sts	0x012D, r23	; 0x80012d <temp+0x1>
     3f8:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <temp+0x2>
     3fc:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <temp+0x3>
}
     400:	ff 91       	pop	r31
     402:	ef 91       	pop	r30
     404:	bf 91       	pop	r27
     406:	af 91       	pop	r26
     408:	9f 91       	pop	r25
     40a:	8f 91       	pop	r24
     40c:	7f 91       	pop	r23
     40e:	6f 91       	pop	r22
     410:	5f 91       	pop	r21
     412:	4f 91       	pop	r20
     414:	3f 91       	pop	r19
     416:	2f 91       	pop	r18
     418:	0f 90       	pop	r0
     41a:	0f be       	out	0x3f, r0	; 63
     41c:	0f 90       	pop	r0
     41e:	1f 90       	pop	r1
     420:	18 95       	reti

00000422 <__vector_11>:

// each one second interrupt
ISR(TIMER1_COMPA_vect)
{
     422:	1f 92       	push	r1
     424:	0f 92       	push	r0
     426:	0f b6       	in	r0, 0x3f	; 63
     428:	0f 92       	push	r0
     42a:	11 24       	eor	r1, r1
     42c:	8f 93       	push	r24
	send_message = true;
     42e:	81 e0       	ldi	r24, 0x01	; 1
     430:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__data_end>
}
     434:	8f 91       	pop	r24
     436:	0f 90       	pop	r0
     438:	0f be       	out	0x3f, r0	; 63
     43a:	0f 90       	pop	r0
     43c:	1f 90       	pop	r1
     43e:	18 95       	reti

00000440 <__vector_1>:

// nRF24L01 interrupt
ISR(INT0_vect) {
     440:	1f 92       	push	r1
     442:	0f 92       	push	r0
     444:	0f b6       	in	r0, 0x3f	; 63
     446:	0f 92       	push	r0
     448:	11 24       	eor	r1, r1
     44a:	8f 93       	push	r24
	rf_interrupt = true;
     44c:	81 e0       	ldi	r24, 0x01	; 1
     44e:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <rf_interrupt>
     452:	8f 91       	pop	r24
     454:	0f 90       	pop	r0
     456:	0f be       	out	0x3f, r0	; 63
     458:	0f 90       	pop	r0
     45a:	1f 90       	pop	r1
     45c:	18 95       	reti

0000045e <copy_address>:
    uint8_t config;
    nRF24L01_read_register(rf, CONFIG, &config, 1);
    config &= ~_BV(PRIM_RX);
    nRF24L01_write_register(rf, CONFIG, &config, 1);
    set_high(rf->ce);
}
     45e:	fc 01       	movw	r30, r24
     460:	a6 2f       	mov	r26, r22
     462:	b7 2f       	mov	r27, r23
     464:	9c 01       	movw	r18, r24
     466:	2b 5f       	subi	r18, 0xFB	; 251
     468:	3f 4f       	sbci	r19, 0xFF	; 255
     46a:	91 91       	ld	r25, Z+
     46c:	9d 93       	st	X+, r25
     46e:	e2 17       	cp	r30, r18
     470:	f3 07       	cpc	r31, r19
     472:	d9 f7       	brne	.-10     	; 0x46a <copy_address+0xc>
     474:	08 95       	ret

00000476 <nRF24L01_init>:
     476:	80 e1       	ldi	r24, 0x10	; 16
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	0e 94 b2 05 	call	0xb64	; 0xb64 <malloc>
     47e:	20 e1       	ldi	r18, 0x10	; 16
     480:	fc 01       	movw	r30, r24
     482:	11 92       	st	Z+, r1
     484:	2a 95       	dec	r18
     486:	e9 f7       	brne	.-6      	; 0x482 <nRF24L01_init+0xc>
     488:	08 95       	ret

0000048a <nRF24L01_send_command>:
     48a:	cf 93       	push	r28
     48c:	df 93       	push	r29
     48e:	ec 01       	movw	r28, r24
     490:	da 01       	movw	r26, r20
     492:	e8 81       	ld	r30, Y
     494:	f9 81       	ldd	r31, Y+1	; 0x01
     496:	50 81       	ld	r21, Z
     498:	81 e0       	ldi	r24, 0x01	; 1
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	0a 80       	ldd	r0, Y+2	; 0x02
     49e:	02 c0       	rjmp	.+4      	; 0x4a4 <nRF24L01_send_command+0x1a>
     4a0:	88 0f       	add	r24, r24
     4a2:	99 1f       	adc	r25, r25
     4a4:	0a 94       	dec	r0
     4a6:	e2 f7       	brpl	.-8      	; 0x4a0 <nRF24L01_send_command+0x16>
     4a8:	80 95       	com	r24
     4aa:	85 23       	and	r24, r21
     4ac:	80 83       	st	Z, r24
     4ae:	6e bd       	out	0x2e, r22	; 46
     4b0:	0d b4       	in	r0, 0x2d	; 45
     4b2:	07 fe       	sbrs	r0, 7
     4b4:	fd cf       	rjmp	.-6      	; 0x4b0 <nRF24L01_send_command+0x26>
     4b6:	8e b5       	in	r24, 0x2e	; 46
     4b8:	8f 87       	std	Y+15, r24	; 0x0f
     4ba:	21 15       	cp	r18, r1
     4bc:	31 05       	cpc	r19, r1
     4be:	79 f0       	breq	.+30     	; 0x4de <nRF24L01_send_command+0x54>
     4c0:	fd 01       	movw	r30, r26
     4c2:	2a 0f       	add	r18, r26
     4c4:	3b 1f       	adc	r19, r27
     4c6:	df 01       	movw	r26, r30
     4c8:	90 81       	ld	r25, Z
     4ca:	9e bd       	out	0x2e, r25	; 46
     4cc:	0d b4       	in	r0, 0x2d	; 45
     4ce:	07 fe       	sbrs	r0, 7
     4d0:	fd cf       	rjmp	.-6      	; 0x4cc <nRF24L01_send_command+0x42>
     4d2:	9e b5       	in	r25, 0x2e	; 46
     4d4:	9c 93       	st	X, r25
     4d6:	31 96       	adiw	r30, 0x01	; 1
     4d8:	e2 17       	cp	r30, r18
     4da:	f3 07       	cpc	r31, r19
     4dc:	a1 f7       	brne	.-24     	; 0x4c6 <nRF24L01_send_command+0x3c>
     4de:	e8 81       	ld	r30, Y
     4e0:	f9 81       	ldd	r31, Y+1	; 0x01
     4e2:	20 81       	ld	r18, Z
     4e4:	81 e0       	ldi	r24, 0x01	; 1
     4e6:	90 e0       	ldi	r25, 0x00	; 0
     4e8:	0a 80       	ldd	r0, Y+2	; 0x02
     4ea:	02 c0       	rjmp	.+4      	; 0x4f0 <nRF24L01_send_command+0x66>
     4ec:	88 0f       	add	r24, r24
     4ee:	99 1f       	adc	r25, r25
     4f0:	0a 94       	dec	r0
     4f2:	e2 f7       	brpl	.-8      	; 0x4ec <nRF24L01_send_command+0x62>
     4f4:	82 2b       	or	r24, r18
     4f6:	80 83       	st	Z, r24
     4f8:	8f 85       	ldd	r24, Y+15	; 0x0f
     4fa:	df 91       	pop	r29
     4fc:	cf 91       	pop	r28
     4fe:	08 95       	ret

00000500 <nRF24L01_write_register>:
     500:	60 62       	ori	r22, 0x20	; 32
     502:	0e 94 45 02 	call	0x48a	; 0x48a <nRF24L01_send_command>
     506:	08 95       	ret

00000508 <nRF24L01_read_register>:
     508:	0e 94 45 02 	call	0x48a	; 0x48a <nRF24L01_send_command>
     50c:	08 95       	ret

0000050e <nRF24L01_no_op>:
     50e:	20 e0       	ldi	r18, 0x00	; 0
     510:	30 e0       	ldi	r19, 0x00	; 0
     512:	40 e0       	ldi	r20, 0x00	; 0
     514:	50 e0       	ldi	r21, 0x00	; 0
     516:	6f ef       	ldi	r22, 0xFF	; 255
     518:	0e 94 45 02 	call	0x48a	; 0x48a <nRF24L01_send_command>
     51c:	08 95       	ret

0000051e <nRF24L01_update_status>:
     51e:	0e 94 87 02 	call	0x50e	; 0x50e <nRF24L01_no_op>
     522:	08 95       	ret

00000524 <nRF24L01_flush_transmit_message>:
     524:	20 e0       	ldi	r18, 0x00	; 0
     526:	30 e0       	ldi	r19, 0x00	; 0
     528:	40 e0       	ldi	r20, 0x00	; 0
     52a:	50 e0       	ldi	r21, 0x00	; 0
     52c:	61 ee       	ldi	r22, 0xE1	; 225
     52e:	0e 94 45 02 	call	0x48a	; 0x48a <nRF24L01_send_command>
     532:	08 95       	ret

00000534 <nRF24L01_clear_interrupts>:

void nRF24L01_clear_interrupts(nRF24L01 *rf) {
     534:	cf 93       	push	r28
     536:	df 93       	push	r29
     538:	1f 92       	push	r1
     53a:	cd b7       	in	r28, 0x3d	; 61
     53c:	de b7       	in	r29, 0x3e	; 62
    uint8_t data = _BV(RX_DR) | _BV(TX_DS) | _BV(MAX_RT);
     53e:	20 e7       	ldi	r18, 0x70	; 112
     540:	29 83       	std	Y+1, r18	; 0x01
    nRF24L01_write_register(rf, STATUS, &data, 1);
     542:	21 e0       	ldi	r18, 0x01	; 1
     544:	30 e0       	ldi	r19, 0x00	; 0
     546:	ae 01       	movw	r20, r28
     548:	4f 5f       	subi	r20, 0xFF	; 255
     54a:	5f 4f       	sbci	r21, 0xFF	; 255
     54c:	67 e0       	ldi	r22, 0x07	; 7
     54e:	0e 94 80 02 	call	0x500	; 0x500 <nRF24L01_write_register>
}
     552:	0f 90       	pop	r0
     554:	df 91       	pop	r29
     556:	cf 91       	pop	r28
     558:	08 95       	ret

0000055a <nRF24L01_begin>:
    nRF24L01 *rf = malloc(sizeof(nRF24L01));
    memset(rf, 0, sizeof(nRF24L01));
    return rf;
}

void nRF24L01_begin(nRF24L01 *rf) {
     55a:	ff 92       	push	r15
     55c:	0f 93       	push	r16
     55e:	1f 93       	push	r17
     560:	cf 93       	push	r28
     562:	df 93       	push	r29
     564:	1f 92       	push	r1
     566:	cd b7       	in	r28, 0x3d	; 61
     568:	de b7       	in	r29, 0x3e	; 62
     56a:	8c 01       	movw	r16, r24
        destination[i] = source[i];
}

inline static void set_as_output(gpio_pin pin) {
    volatile uint8_t *ddr = pin.port - 1;
    *ddr |= _BV(pin.pin);
     56c:	dc 01       	movw	r26, r24
     56e:	ed 91       	ld	r30, X+
     570:	fc 91       	ld	r31, X
     572:	11 97       	sbiw	r26, 0x01	; 1
     574:	42 91       	ld	r20, -Z
     576:	81 e0       	ldi	r24, 0x01	; 1
     578:	90 e0       	ldi	r25, 0x00	; 0
     57a:	9c 01       	movw	r18, r24
     57c:	12 96       	adiw	r26, 0x02	; 2
     57e:	0c 90       	ld	r0, X
     580:	12 97       	sbiw	r26, 0x02	; 2
     582:	02 c0       	rjmp	.+4      	; 0x588 <nRF24L01_begin+0x2e>
     584:	22 0f       	add	r18, r18
     586:	33 1f       	adc	r19, r19
     588:	0a 94       	dec	r0
     58a:	e2 f7       	brpl	.-8      	; 0x584 <nRF24L01_begin+0x2a>
     58c:	24 2b       	or	r18, r20
     58e:	20 83       	st	Z, r18
     590:	13 96       	adiw	r26, 0x03	; 3
     592:	ed 91       	ld	r30, X+
     594:	fc 91       	ld	r31, X
     596:	14 97       	sbiw	r26, 0x04	; 4
     598:	42 91       	ld	r20, -Z
     59a:	9c 01       	movw	r18, r24
     59c:	15 96       	adiw	r26, 0x05	; 5
     59e:	0c 90       	ld	r0, X
     5a0:	15 97       	sbiw	r26, 0x05	; 5
     5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <nRF24L01_begin+0x4e>
     5a4:	22 0f       	add	r18, r18
     5a6:	33 1f       	adc	r19, r19
     5a8:	0a 94       	dec	r0
     5aa:	e2 f7       	brpl	.-8      	; 0x5a4 <nRF24L01_begin+0x4a>
     5ac:	24 2b       	or	r18, r20
     5ae:	20 83       	st	Z, r18
     5b0:	ed 91       	ld	r30, X+
     5b2:	fc 91       	ld	r31, X
     5b4:	11 97       	sbiw	r26, 0x01	; 1
    volatile uint8_t *ddr = pin.port - 1;
    *ddr &= ~_BV(pin.pin);
}

inline static void set_high(gpio_pin pin) {
    *pin.port |= _BV(pin.pin);
     5b6:	40 81       	ld	r20, Z
     5b8:	9c 01       	movw	r18, r24
     5ba:	12 96       	adiw	r26, 0x02	; 2
     5bc:	0c 90       	ld	r0, X
     5be:	12 97       	sbiw	r26, 0x02	; 2
     5c0:	02 c0       	rjmp	.+4      	; 0x5c6 <nRF24L01_begin+0x6c>
     5c2:	22 0f       	add	r18, r18
     5c4:	33 1f       	adc	r19, r19
     5c6:	0a 94       	dec	r0
     5c8:	e2 f7       	brpl	.-8      	; 0x5c2 <nRF24L01_begin+0x68>
     5ca:	24 2b       	or	r18, r20
     5cc:	20 83       	st	Z, r18
     5ce:	13 96       	adiw	r26, 0x03	; 3
     5d0:	ed 91       	ld	r30, X+
     5d2:	fc 91       	ld	r31, X
     5d4:	14 97       	sbiw	r26, 0x04	; 4
}

inline static void set_low(gpio_pin pin) {
    *pin.port &= ~_BV(pin.pin);
     5d6:	30 81       	ld	r19, Z
     5d8:	ac 01       	movw	r20, r24
     5da:	15 96       	adiw	r26, 0x05	; 5
     5dc:	0c 90       	ld	r0, X
     5de:	15 97       	sbiw	r26, 0x05	; 5
     5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <nRF24L01_begin+0x8c>
     5e2:	44 0f       	add	r20, r20
     5e4:	55 1f       	adc	r21, r21
     5e6:	0a 94       	dec	r0
     5e8:	e2 f7       	brpl	.-8      	; 0x5e2 <nRF24L01_begin+0x88>
     5ea:	24 2f       	mov	r18, r20
     5ec:	20 95       	com	r18
     5ee:	23 23       	and	r18, r19
     5f0:	20 83       	st	Z, r18
}

static void spi_init(nRF24L01 *rf) {
    // set as master
    SPCR |= _BV(MSTR);
     5f2:	2c b5       	in	r18, 0x2c	; 44
     5f4:	20 61       	ori	r18, 0x10	; 16
     5f6:	2c bd       	out	0x2c, r18	; 44
    // enable SPI
    SPCR |= _BV(SPE);
     5f8:	2c b5       	in	r18, 0x2c	; 44
     5fa:	20 64       	ori	r18, 0x40	; 64
     5fc:	2c bd       	out	0x2c, r18	; 44
        destination[i] = source[i];
}

inline static void set_as_output(gpio_pin pin) {
    volatile uint8_t *ddr = pin.port - 1;
    *ddr |= _BV(pin.pin);
     5fe:	16 96       	adiw	r26, 0x06	; 6
     600:	ed 91       	ld	r30, X+
     602:	fc 91       	ld	r31, X
     604:	17 97       	sbiw	r26, 0x07	; 7
     606:	42 91       	ld	r20, -Z
     608:	9c 01       	movw	r18, r24
     60a:	18 96       	adiw	r26, 0x08	; 8
     60c:	0c 90       	ld	r0, X
     60e:	18 97       	sbiw	r26, 0x08	; 8
     610:	02 c0       	rjmp	.+4      	; 0x616 <nRF24L01_begin+0xbc>
     612:	22 0f       	add	r18, r18
     614:	33 1f       	adc	r19, r19
     616:	0a 94       	dec	r0
     618:	e2 f7       	brpl	.-8      	; 0x612 <nRF24L01_begin+0xb8>
     61a:	24 2b       	or	r18, r20
     61c:	20 83       	st	Z, r18
     61e:	19 96       	adiw	r26, 0x09	; 9
     620:	ed 91       	ld	r30, X+
     622:	fc 91       	ld	r31, X
     624:	1a 97       	sbiw	r26, 0x0a	; 10
     626:	42 91       	ld	r20, -Z
     628:	9c 01       	movw	r18, r24
     62a:	1b 96       	adiw	r26, 0x0b	; 11
     62c:	0c 90       	ld	r0, X
     62e:	1b 97       	sbiw	r26, 0x0b	; 11
     630:	02 c0       	rjmp	.+4      	; 0x636 <nRF24L01_begin+0xdc>
     632:	22 0f       	add	r18, r18
     634:	33 1f       	adc	r19, r19
     636:	0a 94       	dec	r0
     638:	e2 f7       	brpl	.-8      	; 0x632 <nRF24L01_begin+0xd8>
     63a:	24 2b       	or	r18, r20
     63c:	20 83       	st	Z, r18
}

inline static void set_as_input(gpio_pin pin) {
    volatile uint8_t *ddr = pin.port - 1;
    *ddr &= ~_BV(pin.pin);
     63e:	1c 96       	adiw	r26, 0x0c	; 12
     640:	ed 91       	ld	r30, X+
     642:	fc 91       	ld	r31, X
     644:	1d 97       	sbiw	r26, 0x0d	; 13
     646:	22 91       	ld	r18, -Z
     648:	1e 96       	adiw	r26, 0x0e	; 14
     64a:	0c 90       	ld	r0, X
     64c:	02 c0       	rjmp	.+4      	; 0x652 <nRF24L01_begin+0xf8>
     64e:	88 0f       	add	r24, r24
     650:	99 1f       	adc	r25, r25
     652:	0a 94       	dec	r0
     654:	e2 f7       	brpl	.-8      	; 0x64e <nRF24L01_begin+0xf4>
     656:	80 95       	com	r24
     658:	82 23       	and	r24, r18
     65a:	80 83       	st	Z, r24
    // MISO pin automatically overrides to input
    set_as_output(rf->sck);
    set_as_output(rf->mosi);
    set_as_input(rf->miso);
    // SPI mode 0: Clock Polarity CPOL = 0, Clock Phase CPHA = 0
    SPCR &= ~_BV(CPOL);
     65c:	8c b5       	in	r24, 0x2c	; 44
     65e:	87 7f       	andi	r24, 0xF7	; 247
     660:	8c bd       	out	0x2c, r24	; 44
    SPCR &= ~_BV(CPHA);
     662:	8c b5       	in	r24, 0x2c	; 44
     664:	8b 7f       	andi	r24, 0xFB	; 251
     666:	8c bd       	out	0x2c, r24	; 44
    // Clock 2X speed
    SPCR &= ~_BV(SPR0);
     668:	8c b5       	in	r24, 0x2c	; 44
     66a:	8e 7f       	andi	r24, 0xFE	; 254
     66c:	8c bd       	out	0x2c, r24	; 44
    SPCR &= ~_BV(SPR1);
     66e:	8c b5       	in	r24, 0x2c	; 44
     670:	8d 7f       	andi	r24, 0xFD	; 253
     672:	8c bd       	out	0x2c, r24	; 44
    SPSR |= _BV(SPI2X);
     674:	8d b5       	in	r24, 0x2d	; 45
     676:	81 60       	ori	r24, 0x01	; 1
     678:	8d bd       	out	0x2d, r24	; 45
    // most significant first (MSB)
    SPCR &= ~_BV(DORD);
     67a:	8c b5       	in	r24, 0x2c	; 44
     67c:	8f 7d       	andi	r24, 0xDF	; 223
     67e:	8c bd       	out	0x2c, r24	; 44
    set_high(rf->ss);
    set_low(rf->ce);

    spi_init(rf);

    nRF24L01_send_command(rf, FLUSH_RX, NULL, 0);
     680:	20 e0       	ldi	r18, 0x00	; 0
     682:	30 e0       	ldi	r19, 0x00	; 0
     684:	40 e0       	ldi	r20, 0x00	; 0
     686:	50 e0       	ldi	r21, 0x00	; 0
     688:	62 ee       	ldi	r22, 0xE2	; 226
     68a:	c8 01       	movw	r24, r16
     68c:	0e 94 45 02 	call	0x48a	; 0x48a <nRF24L01_send_command>
    nRF24L01_send_command(rf, FLUSH_TX, NULL, 0);
     690:	20 e0       	ldi	r18, 0x00	; 0
     692:	30 e0       	ldi	r19, 0x00	; 0
     694:	40 e0       	ldi	r20, 0x00	; 0
     696:	50 e0       	ldi	r21, 0x00	; 0
     698:	61 ee       	ldi	r22, 0xE1	; 225
     69a:	c8 01       	movw	r24, r16
     69c:	0e 94 45 02 	call	0x48a	; 0x48a <nRF24L01_send_command>
    nRF24L01_clear_interrupts(rf);
     6a0:	c8 01       	movw	r24, r16
     6a2:	0e 94 9a 02 	call	0x534	; 0x534 <nRF24L01_clear_interrupts>

    uint8_t data;
    data = _BV(EN_CRC) | _BV(CRCO) | _BV(PWR_UP) | _BV(PRIM_RX);
     6a6:	8f e0       	ldi	r24, 0x0F	; 15
     6a8:	89 83       	std	Y+1, r24	; 0x01
    nRF24L01_write_register(rf, CONFIG, &data, 1);
     6aa:	21 e0       	ldi	r18, 0x01	; 1
     6ac:	30 e0       	ldi	r19, 0x00	; 0
     6ae:	ae 01       	movw	r20, r28
     6b0:	4f 5f       	subi	r20, 0xFF	; 255
     6b2:	5f 4f       	sbci	r21, 0xFF	; 255
     6b4:	60 e0       	ldi	r22, 0x00	; 0
     6b6:	c8 01       	movw	r24, r16
     6b8:	0e 94 80 02 	call	0x500	; 0x500 <nRF24L01_write_register>

    // enable Auto Acknowlegde on all pipes
    data = _BV(ENAA_P0) | _BV(ENAA_P1) | _BV(ENAA_P2)
     6bc:	0f 2e       	mov	r0, r31
     6be:	ff e3       	ldi	r31, 0x3F	; 63
     6c0:	ff 2e       	mov	r15, r31
     6c2:	f0 2d       	mov	r31, r0
     6c4:	f9 82       	std	Y+1, r15	; 0x01
         | _BV(ENAA_P3) | _BV(ENAA_P4) | _BV(ENAA_P5);
    nRF24L01_write_register(rf, EN_AA, &data, 1);
     6c6:	21 e0       	ldi	r18, 0x01	; 1
     6c8:	30 e0       	ldi	r19, 0x00	; 0
     6ca:	ae 01       	movw	r20, r28
     6cc:	4f 5f       	subi	r20, 0xFF	; 255
     6ce:	5f 4f       	sbci	r21, 0xFF	; 255
     6d0:	61 e0       	ldi	r22, 0x01	; 1
     6d2:	c8 01       	movw	r24, r16
     6d4:	0e 94 80 02 	call	0x500	; 0x500 <nRF24L01_write_register>

    // enable Dynamic Payload on al pipes
    data = _BV(DPL_P0) | _BV(DPL_P1) | _BV(DPL_P2)
     6d8:	f9 82       	std	Y+1, r15	; 0x01
         | _BV(DPL_P3) | _BV(DPL_P4) | _BV(DPL_P5);
    nRF24L01_write_register(rf, DYNPD, &data, 1);
     6da:	21 e0       	ldi	r18, 0x01	; 1
     6dc:	30 e0       	ldi	r19, 0x00	; 0
     6de:	ae 01       	movw	r20, r28
     6e0:	4f 5f       	subi	r20, 0xFF	; 255
     6e2:	5f 4f       	sbci	r21, 0xFF	; 255
     6e4:	6c e1       	ldi	r22, 0x1C	; 28
     6e6:	c8 01       	movw	r24, r16
     6e8:	0e 94 80 02 	call	0x500	; 0x500 <nRF24L01_write_register>

    // enable Dynamic Payload (global)
    data = _BV(EN_DPL);
     6ec:	84 e0       	ldi	r24, 0x04	; 4
     6ee:	89 83       	std	Y+1, r24	; 0x01
    nRF24L01_write_register(rf, FEATURE, &data, 1);
     6f0:	21 e0       	ldi	r18, 0x01	; 1
     6f2:	30 e0       	ldi	r19, 0x00	; 0
     6f4:	ae 01       	movw	r20, r28
     6f6:	4f 5f       	subi	r20, 0xFF	; 255
     6f8:	5f 4f       	sbci	r21, 0xFF	; 255
     6fa:	6d e1       	ldi	r22, 0x1D	; 29
     6fc:	c8 01       	movw	r24, r16
     6fe:	0e 94 80 02 	call	0x500	; 0x500 <nRF24L01_write_register>

    // disable all rx addresses
    data = 0;
     702:	19 82       	std	Y+1, r1	; 0x01
    nRF24L01_write_register(rf, EN_RXADDR, &data, 1);
     704:	21 e0       	ldi	r18, 0x01	; 1
     706:	30 e0       	ldi	r19, 0x00	; 0
     708:	ae 01       	movw	r20, r28
     70a:	4f 5f       	subi	r20, 0xFF	; 255
     70c:	5f 4f       	sbci	r21, 0xFF	; 255
     70e:	62 e0       	ldi	r22, 0x02	; 2
     710:	c8 01       	movw	r24, r16
     712:	0e 94 80 02 	call	0x500	; 0x500 <nRF24L01_write_register>
}
     716:	0f 90       	pop	r0
     718:	df 91       	pop	r29
     71a:	cf 91       	pop	r28
     71c:	1f 91       	pop	r17
     71e:	0f 91       	pop	r16
     720:	ff 90       	pop	r15
     722:	08 95       	ret

00000724 <nRF24L01_clear_transmit_interrupts>:
void nRF24L01_clear_interrupts(nRF24L01 *rf) {
    uint8_t data = _BV(RX_DR) | _BV(TX_DS) | _BV(MAX_RT);
    nRF24L01_write_register(rf, STATUS, &data, 1);
}

void nRF24L01_clear_transmit_interrupts(nRF24L01 *rf) {
     724:	cf 93       	push	r28
     726:	df 93       	push	r29
     728:	1f 92       	push	r1
     72a:	cd b7       	in	r28, 0x3d	; 61
     72c:	de b7       	in	r29, 0x3e	; 62
    uint8_t data = _BV(TX_DS) | _BV(MAX_RT);
     72e:	20 e3       	ldi	r18, 0x30	; 48
     730:	29 83       	std	Y+1, r18	; 0x01
    nRF24L01_write_register(rf, STATUS, &data, 1);
     732:	21 e0       	ldi	r18, 0x01	; 1
     734:	30 e0       	ldi	r19, 0x00	; 0
     736:	ae 01       	movw	r20, r28
     738:	4f 5f       	subi	r20, 0xFF	; 255
     73a:	5f 4f       	sbci	r21, 0xFF	; 255
     73c:	67 e0       	ldi	r22, 0x07	; 7
     73e:	0e 94 80 02 	call	0x500	; 0x500 <nRF24L01_write_register>
}
     742:	0f 90       	pop	r0
     744:	df 91       	pop	r29
     746:	cf 91       	pop	r28
     748:	08 95       	ret

0000074a <nRF24L01_transmit>:
int nRF24L01_pipe_number_received(nRF24L01 *rf) {
    int pipe_number = (rf->status & RX_P_NO_MASK) >> 1;
    return pipe_number <= 5 ? pipe_number : -1;
}

void nRF24L01_transmit(nRF24L01 *rf, void *address, nRF24L01Message *msg) {
     74a:	cf 92       	push	r12
     74c:	df 92       	push	r13
     74e:	ef 92       	push	r14
     750:	ff 92       	push	r15
     752:	0f 93       	push	r16
     754:	1f 93       	push	r17
     756:	cf 93       	push	r28
     758:	df 93       	push	r29
     75a:	00 d0       	rcall	.+0      	; 0x75c <nRF24L01_transmit+0x12>
     75c:	00 d0       	rcall	.+0      	; 0x75e <nRF24L01_transmit+0x14>
     75e:	00 d0       	rcall	.+0      	; 0x760 <nRF24L01_transmit+0x16>
     760:	cd b7       	in	r28, 0x3d	; 61
     762:	de b7       	in	r29, 0x3e	; 62
     764:	8c 01       	movw	r16, r24
     766:	6b 01       	movw	r12, r22
     768:	7a 01       	movw	r14, r20
    nRF24L01_clear_transmit_interrupts(rf);
     76a:	0e 94 92 03 	call	0x724	; 0x724 <nRF24L01_clear_transmit_interrupts>
    uint8_t addr[5];
    copy_address((uint8_t *)address, addr);
     76e:	be 01       	movw	r22, r28
     770:	6f 5f       	subi	r22, 0xFF	; 255
     772:	7f 4f       	sbci	r23, 0xFF	; 255
     774:	c6 01       	movw	r24, r12
     776:	0e 94 2f 02 	call	0x45e	; 0x45e <copy_address>
    nRF24L01_write_register(rf, TX_ADDR, addr, 5);
     77a:	25 e0       	ldi	r18, 0x05	; 5
     77c:	30 e0       	ldi	r19, 0x00	; 0
     77e:	ae 01       	movw	r20, r28
     780:	4f 5f       	subi	r20, 0xFF	; 255
     782:	5f 4f       	sbci	r21, 0xFF	; 255
     784:	60 e1       	ldi	r22, 0x10	; 16
     786:	c8 01       	movw	r24, r16
     788:	0e 94 80 02 	call	0x500	; 0x500 <nRF24L01_write_register>
    copy_address((uint8_t *)address, addr);
     78c:	be 01       	movw	r22, r28
     78e:	6f 5f       	subi	r22, 0xFF	; 255
     790:	7f 4f       	sbci	r23, 0xFF	; 255
     792:	c6 01       	movw	r24, r12
     794:	0e 94 2f 02 	call	0x45e	; 0x45e <copy_address>
    nRF24L01_write_register(rf, RX_ADDR_P0, addr, 5);
     798:	25 e0       	ldi	r18, 0x05	; 5
     79a:	30 e0       	ldi	r19, 0x00	; 0
     79c:	ae 01       	movw	r20, r28
     79e:	4f 5f       	subi	r20, 0xFF	; 255
     7a0:	5f 4f       	sbci	r21, 0xFF	; 255
     7a2:	6a e0       	ldi	r22, 0x0A	; 10
     7a4:	c8 01       	movw	r24, r16
     7a6:	0e 94 80 02 	call	0x500	; 0x500 <nRF24L01_write_register>
    nRF24L01_send_command(rf, W_TX_PAYLOAD, &msg->data, msg->length);
     7aa:	d7 01       	movw	r26, r14
     7ac:	92 96       	adiw	r26, 0x22	; 34
     7ae:	2c 91       	ld	r18, X
     7b0:	30 e0       	ldi	r19, 0x00	; 0
     7b2:	a7 01       	movw	r20, r14
     7b4:	4e 5f       	subi	r20, 0xFE	; 254
     7b6:	5f 4f       	sbci	r21, 0xFF	; 255
     7b8:	60 ea       	ldi	r22, 0xA0	; 160
     7ba:	c8 01       	movw	r24, r16
     7bc:	0e 94 45 02 	call	0x48a	; 0x48a <nRF24L01_send_command>
    uint8_t config;
    nRF24L01_read_register(rf, CONFIG, &config, 1);
     7c0:	21 e0       	ldi	r18, 0x01	; 1
     7c2:	30 e0       	ldi	r19, 0x00	; 0
     7c4:	ae 01       	movw	r20, r28
     7c6:	4a 5f       	subi	r20, 0xFA	; 250
     7c8:	5f 4f       	sbci	r21, 0xFF	; 255
     7ca:	60 e0       	ldi	r22, 0x00	; 0
     7cc:	c8 01       	movw	r24, r16
     7ce:	0e 94 84 02 	call	0x508	; 0x508 <nRF24L01_read_register>
    config &= ~_BV(PRIM_RX);
     7d2:	8e 81       	ldd	r24, Y+6	; 0x06
     7d4:	8e 7f       	andi	r24, 0xFE	; 254
     7d6:	8e 83       	std	Y+6, r24	; 0x06
    nRF24L01_write_register(rf, CONFIG, &config, 1);
     7d8:	21 e0       	ldi	r18, 0x01	; 1
     7da:	30 e0       	ldi	r19, 0x00	; 0
     7dc:	ae 01       	movw	r20, r28
     7de:	4a 5f       	subi	r20, 0xFA	; 250
     7e0:	5f 4f       	sbci	r21, 0xFF	; 255
     7e2:	60 e0       	ldi	r22, 0x00	; 0
     7e4:	c8 01       	movw	r24, r16
     7e6:	0e 94 80 02 	call	0x500	; 0x500 <nRF24L01_write_register>
     7ea:	d8 01       	movw	r26, r16
     7ec:	13 96       	adiw	r26, 0x03	; 3
     7ee:	ed 91       	ld	r30, X+
     7f0:	fc 91       	ld	r31, X
     7f2:	14 97       	sbiw	r26, 0x04	; 4
    volatile uint8_t *ddr = pin.port - 1;
    *ddr &= ~_BV(pin.pin);
}

inline static void set_high(gpio_pin pin) {
    *pin.port |= _BV(pin.pin);
     7f4:	20 81       	ld	r18, Z
     7f6:	81 e0       	ldi	r24, 0x01	; 1
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	15 96       	adiw	r26, 0x05	; 5
     7fc:	0c 90       	ld	r0, X
     7fe:	02 c0       	rjmp	.+4      	; 0x804 <nRF24L01_transmit+0xba>
     800:	88 0f       	add	r24, r24
     802:	99 1f       	adc	r25, r25
     804:	0a 94       	dec	r0
     806:	e2 f7       	brpl	.-8      	; 0x800 <nRF24L01_transmit+0xb6>
     808:	82 2b       	or	r24, r18
     80a:	80 83       	st	Z, r24
    uint8_t config;
    nRF24L01_read_register(rf, CONFIG, &config, 1);
    config &= ~_BV(PRIM_RX);
    nRF24L01_write_register(rf, CONFIG, &config, 1);
    set_high(rf->ce);
}
     80c:	26 96       	adiw	r28, 0x06	; 6
     80e:	0f b6       	in	r0, 0x3f	; 63
     810:	f8 94       	cli
     812:	de bf       	out	0x3e, r29	; 62
     814:	0f be       	out	0x3f, r0	; 63
     816:	cd bf       	out	0x3d, r28	; 61
     818:	df 91       	pop	r29
     81a:	cf 91       	pop	r28
     81c:	1f 91       	pop	r17
     81e:	0f 91       	pop	r16
     820:	ff 90       	pop	r15
     822:	ef 90       	pop	r14
     824:	df 90       	pop	r13
     826:	cf 90       	pop	r12
     828:	08 95       	ret

0000082a <nRF24L01_transmit_success>:

int nRF24L01_transmit_success(nRF24L01 *rf) {
     82a:	ef 92       	push	r14
     82c:	ff 92       	push	r15
     82e:	0f 93       	push	r16
     830:	1f 93       	push	r17
     832:	cf 93       	push	r28
     834:	df 93       	push	r29
     836:	1f 92       	push	r1
     838:	cd b7       	in	r28, 0x3d	; 61
     83a:	de b7       	in	r29, 0x3e	; 62
     83c:	8c 01       	movw	r16, r24
     83e:	dc 01       	movw	r26, r24
     840:	13 96       	adiw	r26, 0x03	; 3
     842:	ed 91       	ld	r30, X+
     844:	fc 91       	ld	r31, X
     846:	14 97       	sbiw	r26, 0x04	; 4
inline static void set_high(gpio_pin pin) {
    *pin.port |= _BV(pin.pin);
}

inline static void set_low(gpio_pin pin) {
    *pin.port &= ~_BV(pin.pin);
     848:	20 81       	ld	r18, Z
     84a:	81 e0       	ldi	r24, 0x01	; 1
     84c:	90 e0       	ldi	r25, 0x00	; 0
     84e:	15 96       	adiw	r26, 0x05	; 5
     850:	0c 90       	ld	r0, X
     852:	02 c0       	rjmp	.+4      	; 0x858 <nRF24L01_transmit_success+0x2e>
     854:	88 0f       	add	r24, r24
     856:	99 1f       	adc	r25, r25
     858:	0a 94       	dec	r0
     85a:	e2 f7       	brpl	.-8      	; 0x854 <nRF24L01_transmit_success+0x2a>
     85c:	80 95       	com	r24
     85e:	82 23       	and	r24, r18
     860:	80 83       	st	Z, r24
    set_high(rf->ce);
}

int nRF24L01_transmit_success(nRF24L01 *rf) {
    set_low(rf->ce);
    nRF24L01_update_status(rf);
     862:	c8 01       	movw	r24, r16
     864:	0e 94 8f 02 	call	0x51e	; 0x51e <nRF24L01_update_status>
    int success;
    if (rf->status & _BV(TX_DS)) success = 0;
     868:	f8 01       	movw	r30, r16
     86a:	87 85       	ldd	r24, Z+15	; 0x0f
     86c:	85 fd       	sbrc	r24, 5
     86e:	09 c0       	rjmp	.+18     	; 0x882 <nRF24L01_transmit_success+0x58>
    else if (rf->status & _BV(MAX_RT)) success = -1;
     870:	84 fd       	sbrc	r24, 4
     872:	0a c0       	rjmp	.+20     	; 0x888 <nRF24L01_transmit_success+0x5e>
    else success = -2;
     874:	0f 2e       	mov	r0, r31
     876:	fe ef       	ldi	r31, 0xFE	; 254
     878:	ef 2e       	mov	r14, r31
     87a:	ff 24       	eor	r15, r15
     87c:	fa 94       	dec	r15
     87e:	f0 2d       	mov	r31, r0
     880:	06 c0       	rjmp	.+12     	; 0x88e <nRF24L01_transmit_success+0x64>

int nRF24L01_transmit_success(nRF24L01 *rf) {
    set_low(rf->ce);
    nRF24L01_update_status(rf);
    int success;
    if (rf->status & _BV(TX_DS)) success = 0;
     882:	e1 2c       	mov	r14, r1
     884:	f1 2c       	mov	r15, r1
     886:	03 c0       	rjmp	.+6      	; 0x88e <nRF24L01_transmit_success+0x64>
    else if (rf->status & _BV(MAX_RT)) success = -1;
     888:	ee 24       	eor	r14, r14
     88a:	ea 94       	dec	r14
     88c:	fe 2c       	mov	r15, r14
    else success = -2;
    nRF24L01_clear_transmit_interrupts(rf);
     88e:	c8 01       	movw	r24, r16
     890:	0e 94 92 03 	call	0x724	; 0x724 <nRF24L01_clear_transmit_interrupts>
    uint8_t config;
    nRF24L01_read_register(rf, CONFIG, &config, 1);
     894:	21 e0       	ldi	r18, 0x01	; 1
     896:	30 e0       	ldi	r19, 0x00	; 0
     898:	ae 01       	movw	r20, r28
     89a:	4f 5f       	subi	r20, 0xFF	; 255
     89c:	5f 4f       	sbci	r21, 0xFF	; 255
     89e:	60 e0       	ldi	r22, 0x00	; 0
     8a0:	c8 01       	movw	r24, r16
     8a2:	0e 94 84 02 	call	0x508	; 0x508 <nRF24L01_read_register>
    config |= _BV(PRIM_RX);
     8a6:	89 81       	ldd	r24, Y+1	; 0x01
     8a8:	81 60       	ori	r24, 0x01	; 1
     8aa:	89 83       	std	Y+1, r24	; 0x01
    nRF24L01_write_register(rf, CONFIG, &config, 1);
     8ac:	21 e0       	ldi	r18, 0x01	; 1
     8ae:	30 e0       	ldi	r19, 0x00	; 0
     8b0:	ae 01       	movw	r20, r28
     8b2:	4f 5f       	subi	r20, 0xFF	; 255
     8b4:	5f 4f       	sbci	r21, 0xFF	; 255
     8b6:	60 e0       	ldi	r22, 0x00	; 0
     8b8:	c8 01       	movw	r24, r16
     8ba:	0e 94 80 02 	call	0x500	; 0x500 <nRF24L01_write_register>
    return success;
}
     8be:	c7 01       	movw	r24, r14
     8c0:	0f 90       	pop	r0
     8c2:	df 91       	pop	r29
     8c4:	cf 91       	pop	r28
     8c6:	1f 91       	pop	r17
     8c8:	0f 91       	pop	r16
     8ca:	ff 90       	pop	r15
     8cc:	ef 90       	pop	r14
     8ce:	08 95       	ret

000008d0 <__fixunssfsi>:
     8d0:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__fp_splitA>
     8d4:	88 f0       	brcs	.+34     	; 0x8f8 <__fixunssfsi+0x28>
     8d6:	9f 57       	subi	r25, 0x7F	; 127
     8d8:	98 f0       	brcs	.+38     	; 0x900 <__stack+0x1>
     8da:	b9 2f       	mov	r27, r25
     8dc:	99 27       	eor	r25, r25
     8de:	b7 51       	subi	r27, 0x17	; 23
     8e0:	b0 f0       	brcs	.+44     	; 0x90e <__stack+0xf>
     8e2:	e1 f0       	breq	.+56     	; 0x91c <__stack+0x1d>
     8e4:	66 0f       	add	r22, r22
     8e6:	77 1f       	adc	r23, r23
     8e8:	88 1f       	adc	r24, r24
     8ea:	99 1f       	adc	r25, r25
     8ec:	1a f0       	brmi	.+6      	; 0x8f4 <__fixunssfsi+0x24>
     8ee:	ba 95       	dec	r27
     8f0:	c9 f7       	brne	.-14     	; 0x8e4 <__fixunssfsi+0x14>
     8f2:	14 c0       	rjmp	.+40     	; 0x91c <__stack+0x1d>
     8f4:	b1 30       	cpi	r27, 0x01	; 1
     8f6:	91 f0       	breq	.+36     	; 0x91c <__stack+0x1d>
     8f8:	0e 94 f6 04 	call	0x9ec	; 0x9ec <__fp_zero>
     8fc:	b1 e0       	ldi	r27, 0x01	; 1
     8fe:	08 95       	ret
     900:	0c 94 f6 04 	jmp	0x9ec	; 0x9ec <__fp_zero>
     904:	67 2f       	mov	r22, r23
     906:	78 2f       	mov	r23, r24
     908:	88 27       	eor	r24, r24
     90a:	b8 5f       	subi	r27, 0xF8	; 248
     90c:	39 f0       	breq	.+14     	; 0x91c <__stack+0x1d>
     90e:	b9 3f       	cpi	r27, 0xF9	; 249
     910:	cc f3       	brlt	.-14     	; 0x904 <__stack+0x5>
     912:	86 95       	lsr	r24
     914:	77 95       	ror	r23
     916:	67 95       	ror	r22
     918:	b3 95       	inc	r27
     91a:	d9 f7       	brne	.-10     	; 0x912 <__stack+0x13>
     91c:	3e f4       	brtc	.+14     	; 0x92c <__stack+0x2d>
     91e:	90 95       	com	r25
     920:	80 95       	com	r24
     922:	70 95       	com	r23
     924:	61 95       	neg	r22
     926:	7f 4f       	sbci	r23, 0xFF	; 255
     928:	8f 4f       	sbci	r24, 0xFF	; 255
     92a:	9f 4f       	sbci	r25, 0xFF	; 255
     92c:	08 95       	ret

0000092e <__floatunsisf>:
     92e:	e8 94       	clt
     930:	09 c0       	rjmp	.+18     	; 0x944 <__floatsisf+0x12>

00000932 <__floatsisf>:
     932:	97 fb       	bst	r25, 7
     934:	3e f4       	brtc	.+14     	; 0x944 <__floatsisf+0x12>
     936:	90 95       	com	r25
     938:	80 95       	com	r24
     93a:	70 95       	com	r23
     93c:	61 95       	neg	r22
     93e:	7f 4f       	sbci	r23, 0xFF	; 255
     940:	8f 4f       	sbci	r24, 0xFF	; 255
     942:	9f 4f       	sbci	r25, 0xFF	; 255
     944:	99 23       	and	r25, r25
     946:	a9 f0       	breq	.+42     	; 0x972 <__floatsisf+0x40>
     948:	f9 2f       	mov	r31, r25
     94a:	96 e9       	ldi	r25, 0x96	; 150
     94c:	bb 27       	eor	r27, r27
     94e:	93 95       	inc	r25
     950:	f6 95       	lsr	r31
     952:	87 95       	ror	r24
     954:	77 95       	ror	r23
     956:	67 95       	ror	r22
     958:	b7 95       	ror	r27
     95a:	f1 11       	cpse	r31, r1
     95c:	f8 cf       	rjmp	.-16     	; 0x94e <__floatsisf+0x1c>
     95e:	fa f4       	brpl	.+62     	; 0x99e <__floatsisf+0x6c>
     960:	bb 0f       	add	r27, r27
     962:	11 f4       	brne	.+4      	; 0x968 <__floatsisf+0x36>
     964:	60 ff       	sbrs	r22, 0
     966:	1b c0       	rjmp	.+54     	; 0x99e <__floatsisf+0x6c>
     968:	6f 5f       	subi	r22, 0xFF	; 255
     96a:	7f 4f       	sbci	r23, 0xFF	; 255
     96c:	8f 4f       	sbci	r24, 0xFF	; 255
     96e:	9f 4f       	sbci	r25, 0xFF	; 255
     970:	16 c0       	rjmp	.+44     	; 0x99e <__floatsisf+0x6c>
     972:	88 23       	and	r24, r24
     974:	11 f0       	breq	.+4      	; 0x97a <__floatsisf+0x48>
     976:	96 e9       	ldi	r25, 0x96	; 150
     978:	11 c0       	rjmp	.+34     	; 0x99c <__floatsisf+0x6a>
     97a:	77 23       	and	r23, r23
     97c:	21 f0       	breq	.+8      	; 0x986 <__floatsisf+0x54>
     97e:	9e e8       	ldi	r25, 0x8E	; 142
     980:	87 2f       	mov	r24, r23
     982:	76 2f       	mov	r23, r22
     984:	05 c0       	rjmp	.+10     	; 0x990 <__floatsisf+0x5e>
     986:	66 23       	and	r22, r22
     988:	71 f0       	breq	.+28     	; 0x9a6 <__floatsisf+0x74>
     98a:	96 e8       	ldi	r25, 0x86	; 134
     98c:	86 2f       	mov	r24, r22
     98e:	70 e0       	ldi	r23, 0x00	; 0
     990:	60 e0       	ldi	r22, 0x00	; 0
     992:	2a f0       	brmi	.+10     	; 0x99e <__floatsisf+0x6c>
     994:	9a 95       	dec	r25
     996:	66 0f       	add	r22, r22
     998:	77 1f       	adc	r23, r23
     99a:	88 1f       	adc	r24, r24
     99c:	da f7       	brpl	.-10     	; 0x994 <__floatsisf+0x62>
     99e:	88 0f       	add	r24, r24
     9a0:	96 95       	lsr	r25
     9a2:	87 95       	ror	r24
     9a4:	97 f9       	bld	r25, 7
     9a6:	08 95       	ret

000009a8 <__fp_split3>:
     9a8:	57 fd       	sbrc	r21, 7
     9aa:	90 58       	subi	r25, 0x80	; 128
     9ac:	44 0f       	add	r20, r20
     9ae:	55 1f       	adc	r21, r21
     9b0:	59 f0       	breq	.+22     	; 0x9c8 <__fp_splitA+0x10>
     9b2:	5f 3f       	cpi	r21, 0xFF	; 255
     9b4:	71 f0       	breq	.+28     	; 0x9d2 <__fp_splitA+0x1a>
     9b6:	47 95       	ror	r20

000009b8 <__fp_splitA>:
     9b8:	88 0f       	add	r24, r24
     9ba:	97 fb       	bst	r25, 7
     9bc:	99 1f       	adc	r25, r25
     9be:	61 f0       	breq	.+24     	; 0x9d8 <__fp_splitA+0x20>
     9c0:	9f 3f       	cpi	r25, 0xFF	; 255
     9c2:	79 f0       	breq	.+30     	; 0x9e2 <__fp_splitA+0x2a>
     9c4:	87 95       	ror	r24
     9c6:	08 95       	ret
     9c8:	12 16       	cp	r1, r18
     9ca:	13 06       	cpc	r1, r19
     9cc:	14 06       	cpc	r1, r20
     9ce:	55 1f       	adc	r21, r21
     9d0:	f2 cf       	rjmp	.-28     	; 0x9b6 <__fp_split3+0xe>
     9d2:	46 95       	lsr	r20
     9d4:	f1 df       	rcall	.-30     	; 0x9b8 <__fp_splitA>
     9d6:	08 c0       	rjmp	.+16     	; 0x9e8 <__fp_splitA+0x30>
     9d8:	16 16       	cp	r1, r22
     9da:	17 06       	cpc	r1, r23
     9dc:	18 06       	cpc	r1, r24
     9de:	99 1f       	adc	r25, r25
     9e0:	f1 cf       	rjmp	.-30     	; 0x9c4 <__fp_splitA+0xc>
     9e2:	86 95       	lsr	r24
     9e4:	71 05       	cpc	r23, r1
     9e6:	61 05       	cpc	r22, r1
     9e8:	08 94       	sec
     9ea:	08 95       	ret

000009ec <__fp_zero>:
     9ec:	e8 94       	clt

000009ee <__fp_szero>:
     9ee:	bb 27       	eor	r27, r27
     9f0:	66 27       	eor	r22, r22
     9f2:	77 27       	eor	r23, r23
     9f4:	cb 01       	movw	r24, r22
     9f6:	97 f9       	bld	r25, 7
     9f8:	08 95       	ret

000009fa <__mulsf3>:
     9fa:	0e 94 10 05 	call	0xa20	; 0xa20 <__mulsf3x>
     9fe:	0c 94 81 05 	jmp	0xb02	; 0xb02 <__fp_round>
     a02:	0e 94 73 05 	call	0xae6	; 0xae6 <__fp_pscA>
     a06:	38 f0       	brcs	.+14     	; 0xa16 <__mulsf3+0x1c>
     a08:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__fp_pscB>
     a0c:	20 f0       	brcs	.+8      	; 0xa16 <__mulsf3+0x1c>
     a0e:	95 23       	and	r25, r21
     a10:	11 f0       	breq	.+4      	; 0xa16 <__mulsf3+0x1c>
     a12:	0c 94 6a 05 	jmp	0xad4	; 0xad4 <__fp_inf>
     a16:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__fp_nan>
     a1a:	11 24       	eor	r1, r1
     a1c:	0c 94 f7 04 	jmp	0x9ee	; 0x9ee <__fp_szero>

00000a20 <__mulsf3x>:
     a20:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <__fp_split3>
     a24:	70 f3       	brcs	.-36     	; 0xa02 <__mulsf3+0x8>

00000a26 <__mulsf3_pse>:
     a26:	95 9f       	mul	r25, r21
     a28:	c1 f3       	breq	.-16     	; 0xa1a <__mulsf3+0x20>
     a2a:	95 0f       	add	r25, r21
     a2c:	50 e0       	ldi	r21, 0x00	; 0
     a2e:	55 1f       	adc	r21, r21
     a30:	62 9f       	mul	r22, r18
     a32:	f0 01       	movw	r30, r0
     a34:	72 9f       	mul	r23, r18
     a36:	bb 27       	eor	r27, r27
     a38:	f0 0d       	add	r31, r0
     a3a:	b1 1d       	adc	r27, r1
     a3c:	63 9f       	mul	r22, r19
     a3e:	aa 27       	eor	r26, r26
     a40:	f0 0d       	add	r31, r0
     a42:	b1 1d       	adc	r27, r1
     a44:	aa 1f       	adc	r26, r26
     a46:	64 9f       	mul	r22, r20
     a48:	66 27       	eor	r22, r22
     a4a:	b0 0d       	add	r27, r0
     a4c:	a1 1d       	adc	r26, r1
     a4e:	66 1f       	adc	r22, r22
     a50:	82 9f       	mul	r24, r18
     a52:	22 27       	eor	r18, r18
     a54:	b0 0d       	add	r27, r0
     a56:	a1 1d       	adc	r26, r1
     a58:	62 1f       	adc	r22, r18
     a5a:	73 9f       	mul	r23, r19
     a5c:	b0 0d       	add	r27, r0
     a5e:	a1 1d       	adc	r26, r1
     a60:	62 1f       	adc	r22, r18
     a62:	83 9f       	mul	r24, r19
     a64:	a0 0d       	add	r26, r0
     a66:	61 1d       	adc	r22, r1
     a68:	22 1f       	adc	r18, r18
     a6a:	74 9f       	mul	r23, r20
     a6c:	33 27       	eor	r19, r19
     a6e:	a0 0d       	add	r26, r0
     a70:	61 1d       	adc	r22, r1
     a72:	23 1f       	adc	r18, r19
     a74:	84 9f       	mul	r24, r20
     a76:	60 0d       	add	r22, r0
     a78:	21 1d       	adc	r18, r1
     a7a:	82 2f       	mov	r24, r18
     a7c:	76 2f       	mov	r23, r22
     a7e:	6a 2f       	mov	r22, r26
     a80:	11 24       	eor	r1, r1
     a82:	9f 57       	subi	r25, 0x7F	; 127
     a84:	50 40       	sbci	r21, 0x00	; 0
     a86:	9a f0       	brmi	.+38     	; 0xaae <__mulsf3_pse+0x88>
     a88:	f1 f0       	breq	.+60     	; 0xac6 <__mulsf3_pse+0xa0>
     a8a:	88 23       	and	r24, r24
     a8c:	4a f0       	brmi	.+18     	; 0xaa0 <__mulsf3_pse+0x7a>
     a8e:	ee 0f       	add	r30, r30
     a90:	ff 1f       	adc	r31, r31
     a92:	bb 1f       	adc	r27, r27
     a94:	66 1f       	adc	r22, r22
     a96:	77 1f       	adc	r23, r23
     a98:	88 1f       	adc	r24, r24
     a9a:	91 50       	subi	r25, 0x01	; 1
     a9c:	50 40       	sbci	r21, 0x00	; 0
     a9e:	a9 f7       	brne	.-22     	; 0xa8a <__mulsf3_pse+0x64>
     aa0:	9e 3f       	cpi	r25, 0xFE	; 254
     aa2:	51 05       	cpc	r21, r1
     aa4:	80 f0       	brcs	.+32     	; 0xac6 <__mulsf3_pse+0xa0>
     aa6:	0c 94 6a 05 	jmp	0xad4	; 0xad4 <__fp_inf>
     aaa:	0c 94 f7 04 	jmp	0x9ee	; 0x9ee <__fp_szero>
     aae:	5f 3f       	cpi	r21, 0xFF	; 255
     ab0:	e4 f3       	brlt	.-8      	; 0xaaa <__mulsf3_pse+0x84>
     ab2:	98 3e       	cpi	r25, 0xE8	; 232
     ab4:	d4 f3       	brlt	.-12     	; 0xaaa <__mulsf3_pse+0x84>
     ab6:	86 95       	lsr	r24
     ab8:	77 95       	ror	r23
     aba:	67 95       	ror	r22
     abc:	b7 95       	ror	r27
     abe:	f7 95       	ror	r31
     ac0:	e7 95       	ror	r30
     ac2:	9f 5f       	subi	r25, 0xFF	; 255
     ac4:	c1 f7       	brne	.-16     	; 0xab6 <__mulsf3_pse+0x90>
     ac6:	fe 2b       	or	r31, r30
     ac8:	88 0f       	add	r24, r24
     aca:	91 1d       	adc	r25, r1
     acc:	96 95       	lsr	r25
     ace:	87 95       	ror	r24
     ad0:	97 f9       	bld	r25, 7
     ad2:	08 95       	ret

00000ad4 <__fp_inf>:
     ad4:	97 f9       	bld	r25, 7
     ad6:	9f 67       	ori	r25, 0x7F	; 127
     ad8:	80 e8       	ldi	r24, 0x80	; 128
     ada:	70 e0       	ldi	r23, 0x00	; 0
     adc:	60 e0       	ldi	r22, 0x00	; 0
     ade:	08 95       	ret

00000ae0 <__fp_nan>:
     ae0:	9f ef       	ldi	r25, 0xFF	; 255
     ae2:	80 ec       	ldi	r24, 0xC0	; 192
     ae4:	08 95       	ret

00000ae6 <__fp_pscA>:
     ae6:	00 24       	eor	r0, r0
     ae8:	0a 94       	dec	r0
     aea:	16 16       	cp	r1, r22
     aec:	17 06       	cpc	r1, r23
     aee:	18 06       	cpc	r1, r24
     af0:	09 06       	cpc	r0, r25
     af2:	08 95       	ret

00000af4 <__fp_pscB>:
     af4:	00 24       	eor	r0, r0
     af6:	0a 94       	dec	r0
     af8:	12 16       	cp	r1, r18
     afa:	13 06       	cpc	r1, r19
     afc:	14 06       	cpc	r1, r20
     afe:	05 06       	cpc	r0, r21
     b00:	08 95       	ret

00000b02 <__fp_round>:
     b02:	09 2e       	mov	r0, r25
     b04:	03 94       	inc	r0
     b06:	00 0c       	add	r0, r0
     b08:	11 f4       	brne	.+4      	; 0xb0e <__fp_round+0xc>
     b0a:	88 23       	and	r24, r24
     b0c:	52 f0       	brmi	.+20     	; 0xb22 <__fp_round+0x20>
     b0e:	bb 0f       	add	r27, r27
     b10:	40 f4       	brcc	.+16     	; 0xb22 <__fp_round+0x20>
     b12:	bf 2b       	or	r27, r31
     b14:	11 f4       	brne	.+4      	; 0xb1a <__fp_round+0x18>
     b16:	60 ff       	sbrs	r22, 0
     b18:	04 c0       	rjmp	.+8      	; 0xb22 <__fp_round+0x20>
     b1a:	6f 5f       	subi	r22, 0xFF	; 255
     b1c:	7f 4f       	sbci	r23, 0xFF	; 255
     b1e:	8f 4f       	sbci	r24, 0xFF	; 255
     b20:	9f 4f       	sbci	r25, 0xFF	; 255
     b22:	08 95       	ret

00000b24 <dtostrf>:
     b24:	ef 92       	push	r14
     b26:	0f 93       	push	r16
     b28:	1f 93       	push	r17
     b2a:	cf 93       	push	r28
     b2c:	df 93       	push	r29
     b2e:	e8 01       	movw	r28, r16
     b30:	47 fd       	sbrc	r20, 7
     b32:	02 c0       	rjmp	.+4      	; 0xb38 <dtostrf+0x14>
     b34:	34 e0       	ldi	r19, 0x04	; 4
     b36:	01 c0       	rjmp	.+2      	; 0xb3a <dtostrf+0x16>
     b38:	34 e1       	ldi	r19, 0x14	; 20
     b3a:	04 2e       	mov	r0, r20
     b3c:	00 0c       	add	r0, r0
     b3e:	55 0b       	sbc	r21, r21
     b40:	57 ff       	sbrs	r21, 7
     b42:	03 c0       	rjmp	.+6      	; 0xb4a <dtostrf+0x26>
     b44:	51 95       	neg	r21
     b46:	41 95       	neg	r20
     b48:	51 09       	sbc	r21, r1
     b4a:	e3 2e       	mov	r14, r19
     b4c:	02 2f       	mov	r16, r18
     b4e:	24 2f       	mov	r18, r20
     b50:	ae 01       	movw	r20, r28
     b52:	0e 94 ca 08 	call	0x1194	; 0x1194 <dtoa_prf>
     b56:	ce 01       	movw	r24, r28
     b58:	df 91       	pop	r29
     b5a:	cf 91       	pop	r28
     b5c:	1f 91       	pop	r17
     b5e:	0f 91       	pop	r16
     b60:	ef 90       	pop	r14
     b62:	08 95       	ret

00000b64 <malloc>:
     b64:	0f 93       	push	r16
     b66:	1f 93       	push	r17
     b68:	cf 93       	push	r28
     b6a:	df 93       	push	r29
     b6c:	82 30       	cpi	r24, 0x02	; 2
     b6e:	91 05       	cpc	r25, r1
     b70:	10 f4       	brcc	.+4      	; 0xb76 <malloc+0x12>
     b72:	82 e0       	ldi	r24, 0x02	; 2
     b74:	90 e0       	ldi	r25, 0x00	; 0
     b76:	e0 91 3d 01 	lds	r30, 0x013D	; 0x80013d <__flp>
     b7a:	f0 91 3e 01 	lds	r31, 0x013E	; 0x80013e <__flp+0x1>
     b7e:	20 e0       	ldi	r18, 0x00	; 0
     b80:	30 e0       	ldi	r19, 0x00	; 0
     b82:	a0 e0       	ldi	r26, 0x00	; 0
     b84:	b0 e0       	ldi	r27, 0x00	; 0
     b86:	30 97       	sbiw	r30, 0x00	; 0
     b88:	19 f1       	breq	.+70     	; 0xbd0 <malloc+0x6c>
     b8a:	40 81       	ld	r20, Z
     b8c:	51 81       	ldd	r21, Z+1	; 0x01
     b8e:	02 81       	ldd	r16, Z+2	; 0x02
     b90:	13 81       	ldd	r17, Z+3	; 0x03
     b92:	48 17       	cp	r20, r24
     b94:	59 07       	cpc	r21, r25
     b96:	c8 f0       	brcs	.+50     	; 0xbca <malloc+0x66>
     b98:	84 17       	cp	r24, r20
     b9a:	95 07       	cpc	r25, r21
     b9c:	69 f4       	brne	.+26     	; 0xbb8 <malloc+0x54>
     b9e:	10 97       	sbiw	r26, 0x00	; 0
     ba0:	31 f0       	breq	.+12     	; 0xbae <malloc+0x4a>
     ba2:	12 96       	adiw	r26, 0x02	; 2
     ba4:	0c 93       	st	X, r16
     ba6:	12 97       	sbiw	r26, 0x02	; 2
     ba8:	13 96       	adiw	r26, 0x03	; 3
     baa:	1c 93       	st	X, r17
     bac:	27 c0       	rjmp	.+78     	; 0xbfc <malloc+0x98>
     bae:	00 93 3d 01 	sts	0x013D, r16	; 0x80013d <__flp>
     bb2:	10 93 3e 01 	sts	0x013E, r17	; 0x80013e <__flp+0x1>
     bb6:	22 c0       	rjmp	.+68     	; 0xbfc <malloc+0x98>
     bb8:	21 15       	cp	r18, r1
     bba:	31 05       	cpc	r19, r1
     bbc:	19 f0       	breq	.+6      	; 0xbc4 <malloc+0x60>
     bbe:	42 17       	cp	r20, r18
     bc0:	53 07       	cpc	r21, r19
     bc2:	18 f4       	brcc	.+6      	; 0xbca <malloc+0x66>
     bc4:	9a 01       	movw	r18, r20
     bc6:	bd 01       	movw	r22, r26
     bc8:	ef 01       	movw	r28, r30
     bca:	df 01       	movw	r26, r30
     bcc:	f8 01       	movw	r30, r16
     bce:	db cf       	rjmp	.-74     	; 0xb86 <malloc+0x22>
     bd0:	21 15       	cp	r18, r1
     bd2:	31 05       	cpc	r19, r1
     bd4:	f9 f0       	breq	.+62     	; 0xc14 <malloc+0xb0>
     bd6:	28 1b       	sub	r18, r24
     bd8:	39 0b       	sbc	r19, r25
     bda:	24 30       	cpi	r18, 0x04	; 4
     bdc:	31 05       	cpc	r19, r1
     bde:	80 f4       	brcc	.+32     	; 0xc00 <malloc+0x9c>
     be0:	8a 81       	ldd	r24, Y+2	; 0x02
     be2:	9b 81       	ldd	r25, Y+3	; 0x03
     be4:	61 15       	cp	r22, r1
     be6:	71 05       	cpc	r23, r1
     be8:	21 f0       	breq	.+8      	; 0xbf2 <malloc+0x8e>
     bea:	fb 01       	movw	r30, r22
     bec:	93 83       	std	Z+3, r25	; 0x03
     bee:	82 83       	std	Z+2, r24	; 0x02
     bf0:	04 c0       	rjmp	.+8      	; 0xbfa <malloc+0x96>
     bf2:	90 93 3e 01 	sts	0x013E, r25	; 0x80013e <__flp+0x1>
     bf6:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <__flp>
     bfa:	fe 01       	movw	r30, r28
     bfc:	32 96       	adiw	r30, 0x02	; 2
     bfe:	44 c0       	rjmp	.+136    	; 0xc88 <malloc+0x124>
     c00:	fe 01       	movw	r30, r28
     c02:	e2 0f       	add	r30, r18
     c04:	f3 1f       	adc	r31, r19
     c06:	81 93       	st	Z+, r24
     c08:	91 93       	st	Z+, r25
     c0a:	22 50       	subi	r18, 0x02	; 2
     c0c:	31 09       	sbc	r19, r1
     c0e:	39 83       	std	Y+1, r19	; 0x01
     c10:	28 83       	st	Y, r18
     c12:	3a c0       	rjmp	.+116    	; 0xc88 <malloc+0x124>
     c14:	20 91 3b 01 	lds	r18, 0x013B	; 0x80013b <__brkval>
     c18:	30 91 3c 01 	lds	r19, 0x013C	; 0x80013c <__brkval+0x1>
     c1c:	23 2b       	or	r18, r19
     c1e:	41 f4       	brne	.+16     	; 0xc30 <malloc+0xcc>
     c20:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     c24:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     c28:	30 93 3c 01 	sts	0x013C, r19	; 0x80013c <__brkval+0x1>
     c2c:	20 93 3b 01 	sts	0x013B, r18	; 0x80013b <__brkval>
     c30:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     c34:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     c38:	21 15       	cp	r18, r1
     c3a:	31 05       	cpc	r19, r1
     c3c:	41 f4       	brne	.+16     	; 0xc4e <malloc+0xea>
     c3e:	2d b7       	in	r18, 0x3d	; 61
     c40:	3e b7       	in	r19, 0x3e	; 62
     c42:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     c46:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     c4a:	24 1b       	sub	r18, r20
     c4c:	35 0b       	sbc	r19, r21
     c4e:	e0 91 3b 01 	lds	r30, 0x013B	; 0x80013b <__brkval>
     c52:	f0 91 3c 01 	lds	r31, 0x013C	; 0x80013c <__brkval+0x1>
     c56:	e2 17       	cp	r30, r18
     c58:	f3 07       	cpc	r31, r19
     c5a:	a0 f4       	brcc	.+40     	; 0xc84 <malloc+0x120>
     c5c:	2e 1b       	sub	r18, r30
     c5e:	3f 0b       	sbc	r19, r31
     c60:	28 17       	cp	r18, r24
     c62:	39 07       	cpc	r19, r25
     c64:	78 f0       	brcs	.+30     	; 0xc84 <malloc+0x120>
     c66:	ac 01       	movw	r20, r24
     c68:	4e 5f       	subi	r20, 0xFE	; 254
     c6a:	5f 4f       	sbci	r21, 0xFF	; 255
     c6c:	24 17       	cp	r18, r20
     c6e:	35 07       	cpc	r19, r21
     c70:	48 f0       	brcs	.+18     	; 0xc84 <malloc+0x120>
     c72:	4e 0f       	add	r20, r30
     c74:	5f 1f       	adc	r21, r31
     c76:	50 93 3c 01 	sts	0x013C, r21	; 0x80013c <__brkval+0x1>
     c7a:	40 93 3b 01 	sts	0x013B, r20	; 0x80013b <__brkval>
     c7e:	81 93       	st	Z+, r24
     c80:	91 93       	st	Z+, r25
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <malloc+0x124>
     c84:	e0 e0       	ldi	r30, 0x00	; 0
     c86:	f0 e0       	ldi	r31, 0x00	; 0
     c88:	cf 01       	movw	r24, r30
     c8a:	df 91       	pop	r29
     c8c:	cf 91       	pop	r28
     c8e:	1f 91       	pop	r17
     c90:	0f 91       	pop	r16
     c92:	08 95       	ret

00000c94 <free>:
     c94:	cf 93       	push	r28
     c96:	df 93       	push	r29
     c98:	00 97       	sbiw	r24, 0x00	; 0
     c9a:	09 f4       	brne	.+2      	; 0xc9e <free+0xa>
     c9c:	81 c0       	rjmp	.+258    	; 0xda0 <free+0x10c>
     c9e:	fc 01       	movw	r30, r24
     ca0:	32 97       	sbiw	r30, 0x02	; 2
     ca2:	13 82       	std	Z+3, r1	; 0x03
     ca4:	12 82       	std	Z+2, r1	; 0x02
     ca6:	a0 91 3d 01 	lds	r26, 0x013D	; 0x80013d <__flp>
     caa:	b0 91 3e 01 	lds	r27, 0x013E	; 0x80013e <__flp+0x1>
     cae:	10 97       	sbiw	r26, 0x00	; 0
     cb0:	81 f4       	brne	.+32     	; 0xcd2 <free+0x3e>
     cb2:	20 81       	ld	r18, Z
     cb4:	31 81       	ldd	r19, Z+1	; 0x01
     cb6:	82 0f       	add	r24, r18
     cb8:	93 1f       	adc	r25, r19
     cba:	20 91 3b 01 	lds	r18, 0x013B	; 0x80013b <__brkval>
     cbe:	30 91 3c 01 	lds	r19, 0x013C	; 0x80013c <__brkval+0x1>
     cc2:	28 17       	cp	r18, r24
     cc4:	39 07       	cpc	r19, r25
     cc6:	51 f5       	brne	.+84     	; 0xd1c <free+0x88>
     cc8:	f0 93 3c 01 	sts	0x013C, r31	; 0x80013c <__brkval+0x1>
     ccc:	e0 93 3b 01 	sts	0x013B, r30	; 0x80013b <__brkval>
     cd0:	67 c0       	rjmp	.+206    	; 0xda0 <free+0x10c>
     cd2:	ed 01       	movw	r28, r26
     cd4:	20 e0       	ldi	r18, 0x00	; 0
     cd6:	30 e0       	ldi	r19, 0x00	; 0
     cd8:	ce 17       	cp	r28, r30
     cda:	df 07       	cpc	r29, r31
     cdc:	40 f4       	brcc	.+16     	; 0xcee <free+0x5a>
     cde:	4a 81       	ldd	r20, Y+2	; 0x02
     ce0:	5b 81       	ldd	r21, Y+3	; 0x03
     ce2:	9e 01       	movw	r18, r28
     ce4:	41 15       	cp	r20, r1
     ce6:	51 05       	cpc	r21, r1
     ce8:	f1 f0       	breq	.+60     	; 0xd26 <free+0x92>
     cea:	ea 01       	movw	r28, r20
     cec:	f5 cf       	rjmp	.-22     	; 0xcd8 <free+0x44>
     cee:	d3 83       	std	Z+3, r29	; 0x03
     cf0:	c2 83       	std	Z+2, r28	; 0x02
     cf2:	40 81       	ld	r20, Z
     cf4:	51 81       	ldd	r21, Z+1	; 0x01
     cf6:	84 0f       	add	r24, r20
     cf8:	95 1f       	adc	r25, r21
     cfa:	c8 17       	cp	r28, r24
     cfc:	d9 07       	cpc	r29, r25
     cfe:	59 f4       	brne	.+22     	; 0xd16 <free+0x82>
     d00:	88 81       	ld	r24, Y
     d02:	99 81       	ldd	r25, Y+1	; 0x01
     d04:	84 0f       	add	r24, r20
     d06:	95 1f       	adc	r25, r21
     d08:	02 96       	adiw	r24, 0x02	; 2
     d0a:	91 83       	std	Z+1, r25	; 0x01
     d0c:	80 83       	st	Z, r24
     d0e:	8a 81       	ldd	r24, Y+2	; 0x02
     d10:	9b 81       	ldd	r25, Y+3	; 0x03
     d12:	93 83       	std	Z+3, r25	; 0x03
     d14:	82 83       	std	Z+2, r24	; 0x02
     d16:	21 15       	cp	r18, r1
     d18:	31 05       	cpc	r19, r1
     d1a:	29 f4       	brne	.+10     	; 0xd26 <free+0x92>
     d1c:	f0 93 3e 01 	sts	0x013E, r31	; 0x80013e <__flp+0x1>
     d20:	e0 93 3d 01 	sts	0x013D, r30	; 0x80013d <__flp>
     d24:	3d c0       	rjmp	.+122    	; 0xda0 <free+0x10c>
     d26:	e9 01       	movw	r28, r18
     d28:	fb 83       	std	Y+3, r31	; 0x03
     d2a:	ea 83       	std	Y+2, r30	; 0x02
     d2c:	49 91       	ld	r20, Y+
     d2e:	59 91       	ld	r21, Y+
     d30:	c4 0f       	add	r28, r20
     d32:	d5 1f       	adc	r29, r21
     d34:	ec 17       	cp	r30, r28
     d36:	fd 07       	cpc	r31, r29
     d38:	61 f4       	brne	.+24     	; 0xd52 <free+0xbe>
     d3a:	80 81       	ld	r24, Z
     d3c:	91 81       	ldd	r25, Z+1	; 0x01
     d3e:	84 0f       	add	r24, r20
     d40:	95 1f       	adc	r25, r21
     d42:	02 96       	adiw	r24, 0x02	; 2
     d44:	e9 01       	movw	r28, r18
     d46:	99 83       	std	Y+1, r25	; 0x01
     d48:	88 83       	st	Y, r24
     d4a:	82 81       	ldd	r24, Z+2	; 0x02
     d4c:	93 81       	ldd	r25, Z+3	; 0x03
     d4e:	9b 83       	std	Y+3, r25	; 0x03
     d50:	8a 83       	std	Y+2, r24	; 0x02
     d52:	e0 e0       	ldi	r30, 0x00	; 0
     d54:	f0 e0       	ldi	r31, 0x00	; 0
     d56:	12 96       	adiw	r26, 0x02	; 2
     d58:	8d 91       	ld	r24, X+
     d5a:	9c 91       	ld	r25, X
     d5c:	13 97       	sbiw	r26, 0x03	; 3
     d5e:	00 97       	sbiw	r24, 0x00	; 0
     d60:	19 f0       	breq	.+6      	; 0xd68 <free+0xd4>
     d62:	fd 01       	movw	r30, r26
     d64:	dc 01       	movw	r26, r24
     d66:	f7 cf       	rjmp	.-18     	; 0xd56 <free+0xc2>
     d68:	8d 91       	ld	r24, X+
     d6a:	9c 91       	ld	r25, X
     d6c:	11 97       	sbiw	r26, 0x01	; 1
     d6e:	9d 01       	movw	r18, r26
     d70:	2e 5f       	subi	r18, 0xFE	; 254
     d72:	3f 4f       	sbci	r19, 0xFF	; 255
     d74:	82 0f       	add	r24, r18
     d76:	93 1f       	adc	r25, r19
     d78:	20 91 3b 01 	lds	r18, 0x013B	; 0x80013b <__brkval>
     d7c:	30 91 3c 01 	lds	r19, 0x013C	; 0x80013c <__brkval+0x1>
     d80:	28 17       	cp	r18, r24
     d82:	39 07       	cpc	r19, r25
     d84:	69 f4       	brne	.+26     	; 0xda0 <free+0x10c>
     d86:	30 97       	sbiw	r30, 0x00	; 0
     d88:	29 f4       	brne	.+10     	; 0xd94 <free+0x100>
     d8a:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <__flp+0x1>
     d8e:	10 92 3d 01 	sts	0x013D, r1	; 0x80013d <__flp>
     d92:	02 c0       	rjmp	.+4      	; 0xd98 <free+0x104>
     d94:	13 82       	std	Z+3, r1	; 0x03
     d96:	12 82       	std	Z+2, r1	; 0x02
     d98:	b0 93 3c 01 	sts	0x013C, r27	; 0x80013c <__brkval+0x1>
     d9c:	a0 93 3b 01 	sts	0x013B, r26	; 0x80013b <__brkval>
     da0:	df 91       	pop	r29
     da2:	cf 91       	pop	r28
     da4:	08 95       	ret

00000da6 <printf>:
     da6:	a0 e0       	ldi	r26, 0x00	; 0
     da8:	b0 e0       	ldi	r27, 0x00	; 0
     daa:	e9 ed       	ldi	r30, 0xD9	; 217
     dac:	f6 e0       	ldi	r31, 0x06	; 6
     dae:	0c 94 bc 0b 	jmp	0x1778	; 0x1778 <__prologue_saves__+0x20>
     db2:	ae 01       	movw	r20, r28
     db4:	4b 5f       	subi	r20, 0xFB	; 251
     db6:	5f 4f       	sbci	r21, 0xFF	; 255
     db8:	fa 01       	movw	r30, r20
     dba:	61 91       	ld	r22, Z+
     dbc:	71 91       	ld	r23, Z+
     dbe:	af 01       	movw	r20, r30
     dc0:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__iob+0x2>
     dc4:	90 91 42 01 	lds	r25, 0x0142	; 0x800142 <__iob+0x3>
     dc8:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <vfprintf>
     dcc:	e2 e0       	ldi	r30, 0x02	; 2
     dce:	0c 94 d8 0b 	jmp	0x17b0	; 0x17b0 <__epilogue_restores__+0x20>

00000dd2 <vfprintf>:
     dd2:	ab e0       	ldi	r26, 0x0B	; 11
     dd4:	b0 e0       	ldi	r27, 0x00	; 0
     dd6:	ef ee       	ldi	r30, 0xEF	; 239
     dd8:	f6 e0       	ldi	r31, 0x06	; 6
     dda:	0c 94 ac 0b 	jmp	0x1758	; 0x1758 <__prologue_saves__>
     dde:	6c 01       	movw	r12, r24
     de0:	7b 01       	movw	r14, r22
     de2:	8a 01       	movw	r16, r20
     de4:	fc 01       	movw	r30, r24
     de6:	17 82       	std	Z+7, r1	; 0x07
     de8:	16 82       	std	Z+6, r1	; 0x06
     dea:	83 81       	ldd	r24, Z+3	; 0x03
     dec:	81 ff       	sbrs	r24, 1
     dee:	cc c1       	rjmp	.+920    	; 0x1188 <vfprintf+0x3b6>
     df0:	ce 01       	movw	r24, r28
     df2:	01 96       	adiw	r24, 0x01	; 1
     df4:	3c 01       	movw	r6, r24
     df6:	f6 01       	movw	r30, r12
     df8:	93 81       	ldd	r25, Z+3	; 0x03
     dfa:	f7 01       	movw	r30, r14
     dfc:	93 fd       	sbrc	r25, 3
     dfe:	85 91       	lpm	r24, Z+
     e00:	93 ff       	sbrs	r25, 3
     e02:	81 91       	ld	r24, Z+
     e04:	7f 01       	movw	r14, r30
     e06:	88 23       	and	r24, r24
     e08:	09 f4       	brne	.+2      	; 0xe0c <vfprintf+0x3a>
     e0a:	ba c1       	rjmp	.+884    	; 0x1180 <vfprintf+0x3ae>
     e0c:	85 32       	cpi	r24, 0x25	; 37
     e0e:	39 f4       	brne	.+14     	; 0xe1e <vfprintf+0x4c>
     e10:	93 fd       	sbrc	r25, 3
     e12:	85 91       	lpm	r24, Z+
     e14:	93 ff       	sbrs	r25, 3
     e16:	81 91       	ld	r24, Z+
     e18:	7f 01       	movw	r14, r30
     e1a:	85 32       	cpi	r24, 0x25	; 37
     e1c:	29 f4       	brne	.+10     	; 0xe28 <vfprintf+0x56>
     e1e:	b6 01       	movw	r22, r12
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	0e 94 12 0b 	call	0x1624	; 0x1624 <fputc>
     e26:	e7 cf       	rjmp	.-50     	; 0xdf6 <vfprintf+0x24>
     e28:	91 2c       	mov	r9, r1
     e2a:	21 2c       	mov	r2, r1
     e2c:	31 2c       	mov	r3, r1
     e2e:	ff e1       	ldi	r31, 0x1F	; 31
     e30:	f3 15       	cp	r31, r3
     e32:	d8 f0       	brcs	.+54     	; 0xe6a <vfprintf+0x98>
     e34:	8b 32       	cpi	r24, 0x2B	; 43
     e36:	79 f0       	breq	.+30     	; 0xe56 <vfprintf+0x84>
     e38:	38 f4       	brcc	.+14     	; 0xe48 <vfprintf+0x76>
     e3a:	80 32       	cpi	r24, 0x20	; 32
     e3c:	79 f0       	breq	.+30     	; 0xe5c <vfprintf+0x8a>
     e3e:	83 32       	cpi	r24, 0x23	; 35
     e40:	a1 f4       	brne	.+40     	; 0xe6a <vfprintf+0x98>
     e42:	23 2d       	mov	r18, r3
     e44:	20 61       	ori	r18, 0x10	; 16
     e46:	1d c0       	rjmp	.+58     	; 0xe82 <vfprintf+0xb0>
     e48:	8d 32       	cpi	r24, 0x2D	; 45
     e4a:	61 f0       	breq	.+24     	; 0xe64 <vfprintf+0x92>
     e4c:	80 33       	cpi	r24, 0x30	; 48
     e4e:	69 f4       	brne	.+26     	; 0xe6a <vfprintf+0x98>
     e50:	23 2d       	mov	r18, r3
     e52:	21 60       	ori	r18, 0x01	; 1
     e54:	16 c0       	rjmp	.+44     	; 0xe82 <vfprintf+0xb0>
     e56:	83 2d       	mov	r24, r3
     e58:	82 60       	ori	r24, 0x02	; 2
     e5a:	38 2e       	mov	r3, r24
     e5c:	e3 2d       	mov	r30, r3
     e5e:	e4 60       	ori	r30, 0x04	; 4
     e60:	3e 2e       	mov	r3, r30
     e62:	2a c0       	rjmp	.+84     	; 0xeb8 <vfprintf+0xe6>
     e64:	f3 2d       	mov	r31, r3
     e66:	f8 60       	ori	r31, 0x08	; 8
     e68:	1d c0       	rjmp	.+58     	; 0xea4 <vfprintf+0xd2>
     e6a:	37 fc       	sbrc	r3, 7
     e6c:	2d c0       	rjmp	.+90     	; 0xec8 <vfprintf+0xf6>
     e6e:	20 ed       	ldi	r18, 0xD0	; 208
     e70:	28 0f       	add	r18, r24
     e72:	2a 30       	cpi	r18, 0x0A	; 10
     e74:	40 f0       	brcs	.+16     	; 0xe86 <vfprintf+0xb4>
     e76:	8e 32       	cpi	r24, 0x2E	; 46
     e78:	b9 f4       	brne	.+46     	; 0xea8 <vfprintf+0xd6>
     e7a:	36 fc       	sbrc	r3, 6
     e7c:	81 c1       	rjmp	.+770    	; 0x1180 <vfprintf+0x3ae>
     e7e:	23 2d       	mov	r18, r3
     e80:	20 64       	ori	r18, 0x40	; 64
     e82:	32 2e       	mov	r3, r18
     e84:	19 c0       	rjmp	.+50     	; 0xeb8 <vfprintf+0xe6>
     e86:	36 fe       	sbrs	r3, 6
     e88:	06 c0       	rjmp	.+12     	; 0xe96 <vfprintf+0xc4>
     e8a:	8a e0       	ldi	r24, 0x0A	; 10
     e8c:	98 9e       	mul	r9, r24
     e8e:	20 0d       	add	r18, r0
     e90:	11 24       	eor	r1, r1
     e92:	92 2e       	mov	r9, r18
     e94:	11 c0       	rjmp	.+34     	; 0xeb8 <vfprintf+0xe6>
     e96:	ea e0       	ldi	r30, 0x0A	; 10
     e98:	2e 9e       	mul	r2, r30
     e9a:	20 0d       	add	r18, r0
     e9c:	11 24       	eor	r1, r1
     e9e:	22 2e       	mov	r2, r18
     ea0:	f3 2d       	mov	r31, r3
     ea2:	f0 62       	ori	r31, 0x20	; 32
     ea4:	3f 2e       	mov	r3, r31
     ea6:	08 c0       	rjmp	.+16     	; 0xeb8 <vfprintf+0xe6>
     ea8:	8c 36       	cpi	r24, 0x6C	; 108
     eaa:	21 f4       	brne	.+8      	; 0xeb4 <vfprintf+0xe2>
     eac:	83 2d       	mov	r24, r3
     eae:	80 68       	ori	r24, 0x80	; 128
     eb0:	38 2e       	mov	r3, r24
     eb2:	02 c0       	rjmp	.+4      	; 0xeb8 <vfprintf+0xe6>
     eb4:	88 36       	cpi	r24, 0x68	; 104
     eb6:	41 f4       	brne	.+16     	; 0xec8 <vfprintf+0xf6>
     eb8:	f7 01       	movw	r30, r14
     eba:	93 fd       	sbrc	r25, 3
     ebc:	85 91       	lpm	r24, Z+
     ebe:	93 ff       	sbrs	r25, 3
     ec0:	81 91       	ld	r24, Z+
     ec2:	7f 01       	movw	r14, r30
     ec4:	81 11       	cpse	r24, r1
     ec6:	b3 cf       	rjmp	.-154    	; 0xe2e <vfprintf+0x5c>
     ec8:	98 2f       	mov	r25, r24
     eca:	9f 7d       	andi	r25, 0xDF	; 223
     ecc:	95 54       	subi	r25, 0x45	; 69
     ece:	93 30       	cpi	r25, 0x03	; 3
     ed0:	28 f4       	brcc	.+10     	; 0xedc <vfprintf+0x10a>
     ed2:	0c 5f       	subi	r16, 0xFC	; 252
     ed4:	1f 4f       	sbci	r17, 0xFF	; 255
     ed6:	9f e3       	ldi	r25, 0x3F	; 63
     ed8:	99 83       	std	Y+1, r25	; 0x01
     eda:	0d c0       	rjmp	.+26     	; 0xef6 <vfprintf+0x124>
     edc:	83 36       	cpi	r24, 0x63	; 99
     ede:	31 f0       	breq	.+12     	; 0xeec <vfprintf+0x11a>
     ee0:	83 37       	cpi	r24, 0x73	; 115
     ee2:	71 f0       	breq	.+28     	; 0xf00 <vfprintf+0x12e>
     ee4:	83 35       	cpi	r24, 0x53	; 83
     ee6:	09 f0       	breq	.+2      	; 0xeea <vfprintf+0x118>
     ee8:	59 c0       	rjmp	.+178    	; 0xf9c <vfprintf+0x1ca>
     eea:	21 c0       	rjmp	.+66     	; 0xf2e <vfprintf+0x15c>
     eec:	f8 01       	movw	r30, r16
     eee:	80 81       	ld	r24, Z
     ef0:	89 83       	std	Y+1, r24	; 0x01
     ef2:	0e 5f       	subi	r16, 0xFE	; 254
     ef4:	1f 4f       	sbci	r17, 0xFF	; 255
     ef6:	88 24       	eor	r8, r8
     ef8:	83 94       	inc	r8
     efa:	91 2c       	mov	r9, r1
     efc:	53 01       	movw	r10, r6
     efe:	13 c0       	rjmp	.+38     	; 0xf26 <vfprintf+0x154>
     f00:	28 01       	movw	r4, r16
     f02:	f2 e0       	ldi	r31, 0x02	; 2
     f04:	4f 0e       	add	r4, r31
     f06:	51 1c       	adc	r5, r1
     f08:	f8 01       	movw	r30, r16
     f0a:	a0 80       	ld	r10, Z
     f0c:	b1 80       	ldd	r11, Z+1	; 0x01
     f0e:	36 fe       	sbrs	r3, 6
     f10:	03 c0       	rjmp	.+6      	; 0xf18 <vfprintf+0x146>
     f12:	69 2d       	mov	r22, r9
     f14:	70 e0       	ldi	r23, 0x00	; 0
     f16:	02 c0       	rjmp	.+4      	; 0xf1c <vfprintf+0x14a>
     f18:	6f ef       	ldi	r22, 0xFF	; 255
     f1a:	7f ef       	ldi	r23, 0xFF	; 255
     f1c:	c5 01       	movw	r24, r10
     f1e:	0e 94 07 0b 	call	0x160e	; 0x160e <strnlen>
     f22:	4c 01       	movw	r8, r24
     f24:	82 01       	movw	r16, r4
     f26:	f3 2d       	mov	r31, r3
     f28:	ff 77       	andi	r31, 0x7F	; 127
     f2a:	3f 2e       	mov	r3, r31
     f2c:	16 c0       	rjmp	.+44     	; 0xf5a <vfprintf+0x188>
     f2e:	28 01       	movw	r4, r16
     f30:	22 e0       	ldi	r18, 0x02	; 2
     f32:	42 0e       	add	r4, r18
     f34:	51 1c       	adc	r5, r1
     f36:	f8 01       	movw	r30, r16
     f38:	a0 80       	ld	r10, Z
     f3a:	b1 80       	ldd	r11, Z+1	; 0x01
     f3c:	36 fe       	sbrs	r3, 6
     f3e:	03 c0       	rjmp	.+6      	; 0xf46 <vfprintf+0x174>
     f40:	69 2d       	mov	r22, r9
     f42:	70 e0       	ldi	r23, 0x00	; 0
     f44:	02 c0       	rjmp	.+4      	; 0xf4a <vfprintf+0x178>
     f46:	6f ef       	ldi	r22, 0xFF	; 255
     f48:	7f ef       	ldi	r23, 0xFF	; 255
     f4a:	c5 01       	movw	r24, r10
     f4c:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <strnlen_P>
     f50:	4c 01       	movw	r8, r24
     f52:	f3 2d       	mov	r31, r3
     f54:	f0 68       	ori	r31, 0x80	; 128
     f56:	3f 2e       	mov	r3, r31
     f58:	82 01       	movw	r16, r4
     f5a:	33 fc       	sbrc	r3, 3
     f5c:	1b c0       	rjmp	.+54     	; 0xf94 <vfprintf+0x1c2>
     f5e:	82 2d       	mov	r24, r2
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	88 16       	cp	r8, r24
     f64:	99 06       	cpc	r9, r25
     f66:	b0 f4       	brcc	.+44     	; 0xf94 <vfprintf+0x1c2>
     f68:	b6 01       	movw	r22, r12
     f6a:	80 e2       	ldi	r24, 0x20	; 32
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	0e 94 12 0b 	call	0x1624	; 0x1624 <fputc>
     f72:	2a 94       	dec	r2
     f74:	f4 cf       	rjmp	.-24     	; 0xf5e <vfprintf+0x18c>
     f76:	f5 01       	movw	r30, r10
     f78:	37 fc       	sbrc	r3, 7
     f7a:	85 91       	lpm	r24, Z+
     f7c:	37 fe       	sbrs	r3, 7
     f7e:	81 91       	ld	r24, Z+
     f80:	5f 01       	movw	r10, r30
     f82:	b6 01       	movw	r22, r12
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	0e 94 12 0b 	call	0x1624	; 0x1624 <fputc>
     f8a:	21 10       	cpse	r2, r1
     f8c:	2a 94       	dec	r2
     f8e:	21 e0       	ldi	r18, 0x01	; 1
     f90:	82 1a       	sub	r8, r18
     f92:	91 08       	sbc	r9, r1
     f94:	81 14       	cp	r8, r1
     f96:	91 04       	cpc	r9, r1
     f98:	71 f7       	brne	.-36     	; 0xf76 <vfprintf+0x1a4>
     f9a:	e8 c0       	rjmp	.+464    	; 0x116c <vfprintf+0x39a>
     f9c:	84 36       	cpi	r24, 0x64	; 100
     f9e:	11 f0       	breq	.+4      	; 0xfa4 <vfprintf+0x1d2>
     fa0:	89 36       	cpi	r24, 0x69	; 105
     fa2:	41 f5       	brne	.+80     	; 0xff4 <vfprintf+0x222>
     fa4:	f8 01       	movw	r30, r16
     fa6:	37 fe       	sbrs	r3, 7
     fa8:	07 c0       	rjmp	.+14     	; 0xfb8 <vfprintf+0x1e6>
     faa:	60 81       	ld	r22, Z
     fac:	71 81       	ldd	r23, Z+1	; 0x01
     fae:	82 81       	ldd	r24, Z+2	; 0x02
     fb0:	93 81       	ldd	r25, Z+3	; 0x03
     fb2:	0c 5f       	subi	r16, 0xFC	; 252
     fb4:	1f 4f       	sbci	r17, 0xFF	; 255
     fb6:	08 c0       	rjmp	.+16     	; 0xfc8 <vfprintf+0x1f6>
     fb8:	60 81       	ld	r22, Z
     fba:	71 81       	ldd	r23, Z+1	; 0x01
     fbc:	07 2e       	mov	r0, r23
     fbe:	00 0c       	add	r0, r0
     fc0:	88 0b       	sbc	r24, r24
     fc2:	99 0b       	sbc	r25, r25
     fc4:	0e 5f       	subi	r16, 0xFE	; 254
     fc6:	1f 4f       	sbci	r17, 0xFF	; 255
     fc8:	f3 2d       	mov	r31, r3
     fca:	ff 76       	andi	r31, 0x6F	; 111
     fcc:	3f 2e       	mov	r3, r31
     fce:	97 ff       	sbrs	r25, 7
     fd0:	09 c0       	rjmp	.+18     	; 0xfe4 <vfprintf+0x212>
     fd2:	90 95       	com	r25
     fd4:	80 95       	com	r24
     fd6:	70 95       	com	r23
     fd8:	61 95       	neg	r22
     fda:	7f 4f       	sbci	r23, 0xFF	; 255
     fdc:	8f 4f       	sbci	r24, 0xFF	; 255
     fde:	9f 4f       	sbci	r25, 0xFF	; 255
     fe0:	f0 68       	ori	r31, 0x80	; 128
     fe2:	3f 2e       	mov	r3, r31
     fe4:	2a e0       	ldi	r18, 0x0A	; 10
     fe6:	30 e0       	ldi	r19, 0x00	; 0
     fe8:	a3 01       	movw	r20, r6
     fea:	0e 94 4e 0b 	call	0x169c	; 0x169c <__ultoa_invert>
     fee:	88 2e       	mov	r8, r24
     ff0:	86 18       	sub	r8, r6
     ff2:	45 c0       	rjmp	.+138    	; 0x107e <vfprintf+0x2ac>
     ff4:	85 37       	cpi	r24, 0x75	; 117
     ff6:	31 f4       	brne	.+12     	; 0x1004 <vfprintf+0x232>
     ff8:	23 2d       	mov	r18, r3
     ffa:	2f 7e       	andi	r18, 0xEF	; 239
     ffc:	b2 2e       	mov	r11, r18
     ffe:	2a e0       	ldi	r18, 0x0A	; 10
    1000:	30 e0       	ldi	r19, 0x00	; 0
    1002:	25 c0       	rjmp	.+74     	; 0x104e <vfprintf+0x27c>
    1004:	93 2d       	mov	r25, r3
    1006:	99 7f       	andi	r25, 0xF9	; 249
    1008:	b9 2e       	mov	r11, r25
    100a:	8f 36       	cpi	r24, 0x6F	; 111
    100c:	c1 f0       	breq	.+48     	; 0x103e <vfprintf+0x26c>
    100e:	18 f4       	brcc	.+6      	; 0x1016 <vfprintf+0x244>
    1010:	88 35       	cpi	r24, 0x58	; 88
    1012:	79 f0       	breq	.+30     	; 0x1032 <vfprintf+0x260>
    1014:	b5 c0       	rjmp	.+362    	; 0x1180 <vfprintf+0x3ae>
    1016:	80 37       	cpi	r24, 0x70	; 112
    1018:	19 f0       	breq	.+6      	; 0x1020 <vfprintf+0x24e>
    101a:	88 37       	cpi	r24, 0x78	; 120
    101c:	21 f0       	breq	.+8      	; 0x1026 <vfprintf+0x254>
    101e:	b0 c0       	rjmp	.+352    	; 0x1180 <vfprintf+0x3ae>
    1020:	e9 2f       	mov	r30, r25
    1022:	e0 61       	ori	r30, 0x10	; 16
    1024:	be 2e       	mov	r11, r30
    1026:	b4 fe       	sbrs	r11, 4
    1028:	0d c0       	rjmp	.+26     	; 0x1044 <vfprintf+0x272>
    102a:	fb 2d       	mov	r31, r11
    102c:	f4 60       	ori	r31, 0x04	; 4
    102e:	bf 2e       	mov	r11, r31
    1030:	09 c0       	rjmp	.+18     	; 0x1044 <vfprintf+0x272>
    1032:	34 fe       	sbrs	r3, 4
    1034:	0a c0       	rjmp	.+20     	; 0x104a <vfprintf+0x278>
    1036:	29 2f       	mov	r18, r25
    1038:	26 60       	ori	r18, 0x06	; 6
    103a:	b2 2e       	mov	r11, r18
    103c:	06 c0       	rjmp	.+12     	; 0x104a <vfprintf+0x278>
    103e:	28 e0       	ldi	r18, 0x08	; 8
    1040:	30 e0       	ldi	r19, 0x00	; 0
    1042:	05 c0       	rjmp	.+10     	; 0x104e <vfprintf+0x27c>
    1044:	20 e1       	ldi	r18, 0x10	; 16
    1046:	30 e0       	ldi	r19, 0x00	; 0
    1048:	02 c0       	rjmp	.+4      	; 0x104e <vfprintf+0x27c>
    104a:	20 e1       	ldi	r18, 0x10	; 16
    104c:	32 e0       	ldi	r19, 0x02	; 2
    104e:	f8 01       	movw	r30, r16
    1050:	b7 fe       	sbrs	r11, 7
    1052:	07 c0       	rjmp	.+14     	; 0x1062 <vfprintf+0x290>
    1054:	60 81       	ld	r22, Z
    1056:	71 81       	ldd	r23, Z+1	; 0x01
    1058:	82 81       	ldd	r24, Z+2	; 0x02
    105a:	93 81       	ldd	r25, Z+3	; 0x03
    105c:	0c 5f       	subi	r16, 0xFC	; 252
    105e:	1f 4f       	sbci	r17, 0xFF	; 255
    1060:	06 c0       	rjmp	.+12     	; 0x106e <vfprintf+0x29c>
    1062:	60 81       	ld	r22, Z
    1064:	71 81       	ldd	r23, Z+1	; 0x01
    1066:	80 e0       	ldi	r24, 0x00	; 0
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	0e 5f       	subi	r16, 0xFE	; 254
    106c:	1f 4f       	sbci	r17, 0xFF	; 255
    106e:	a3 01       	movw	r20, r6
    1070:	0e 94 4e 0b 	call	0x169c	; 0x169c <__ultoa_invert>
    1074:	88 2e       	mov	r8, r24
    1076:	86 18       	sub	r8, r6
    1078:	fb 2d       	mov	r31, r11
    107a:	ff 77       	andi	r31, 0x7F	; 127
    107c:	3f 2e       	mov	r3, r31
    107e:	36 fe       	sbrs	r3, 6
    1080:	0d c0       	rjmp	.+26     	; 0x109c <vfprintf+0x2ca>
    1082:	23 2d       	mov	r18, r3
    1084:	2e 7f       	andi	r18, 0xFE	; 254
    1086:	a2 2e       	mov	r10, r18
    1088:	89 14       	cp	r8, r9
    108a:	58 f4       	brcc	.+22     	; 0x10a2 <vfprintf+0x2d0>
    108c:	34 fe       	sbrs	r3, 4
    108e:	0b c0       	rjmp	.+22     	; 0x10a6 <vfprintf+0x2d4>
    1090:	32 fc       	sbrc	r3, 2
    1092:	09 c0       	rjmp	.+18     	; 0x10a6 <vfprintf+0x2d4>
    1094:	83 2d       	mov	r24, r3
    1096:	8e 7e       	andi	r24, 0xEE	; 238
    1098:	a8 2e       	mov	r10, r24
    109a:	05 c0       	rjmp	.+10     	; 0x10a6 <vfprintf+0x2d4>
    109c:	b8 2c       	mov	r11, r8
    109e:	a3 2c       	mov	r10, r3
    10a0:	03 c0       	rjmp	.+6      	; 0x10a8 <vfprintf+0x2d6>
    10a2:	b8 2c       	mov	r11, r8
    10a4:	01 c0       	rjmp	.+2      	; 0x10a8 <vfprintf+0x2d6>
    10a6:	b9 2c       	mov	r11, r9
    10a8:	a4 fe       	sbrs	r10, 4
    10aa:	0f c0       	rjmp	.+30     	; 0x10ca <vfprintf+0x2f8>
    10ac:	fe 01       	movw	r30, r28
    10ae:	e8 0d       	add	r30, r8
    10b0:	f1 1d       	adc	r31, r1
    10b2:	80 81       	ld	r24, Z
    10b4:	80 33       	cpi	r24, 0x30	; 48
    10b6:	21 f4       	brne	.+8      	; 0x10c0 <vfprintf+0x2ee>
    10b8:	9a 2d       	mov	r25, r10
    10ba:	99 7e       	andi	r25, 0xE9	; 233
    10bc:	a9 2e       	mov	r10, r25
    10be:	09 c0       	rjmp	.+18     	; 0x10d2 <vfprintf+0x300>
    10c0:	a2 fe       	sbrs	r10, 2
    10c2:	06 c0       	rjmp	.+12     	; 0x10d0 <vfprintf+0x2fe>
    10c4:	b3 94       	inc	r11
    10c6:	b3 94       	inc	r11
    10c8:	04 c0       	rjmp	.+8      	; 0x10d2 <vfprintf+0x300>
    10ca:	8a 2d       	mov	r24, r10
    10cc:	86 78       	andi	r24, 0x86	; 134
    10ce:	09 f0       	breq	.+2      	; 0x10d2 <vfprintf+0x300>
    10d0:	b3 94       	inc	r11
    10d2:	a3 fc       	sbrc	r10, 3
    10d4:	11 c0       	rjmp	.+34     	; 0x10f8 <vfprintf+0x326>
    10d6:	a0 fe       	sbrs	r10, 0
    10d8:	06 c0       	rjmp	.+12     	; 0x10e6 <vfprintf+0x314>
    10da:	b2 14       	cp	r11, r2
    10dc:	88 f4       	brcc	.+34     	; 0x1100 <vfprintf+0x32e>
    10de:	28 0c       	add	r2, r8
    10e0:	92 2c       	mov	r9, r2
    10e2:	9b 18       	sub	r9, r11
    10e4:	0e c0       	rjmp	.+28     	; 0x1102 <vfprintf+0x330>
    10e6:	b2 14       	cp	r11, r2
    10e8:	60 f4       	brcc	.+24     	; 0x1102 <vfprintf+0x330>
    10ea:	b6 01       	movw	r22, r12
    10ec:	80 e2       	ldi	r24, 0x20	; 32
    10ee:	90 e0       	ldi	r25, 0x00	; 0
    10f0:	0e 94 12 0b 	call	0x1624	; 0x1624 <fputc>
    10f4:	b3 94       	inc	r11
    10f6:	f7 cf       	rjmp	.-18     	; 0x10e6 <vfprintf+0x314>
    10f8:	b2 14       	cp	r11, r2
    10fa:	18 f4       	brcc	.+6      	; 0x1102 <vfprintf+0x330>
    10fc:	2b 18       	sub	r2, r11
    10fe:	02 c0       	rjmp	.+4      	; 0x1104 <vfprintf+0x332>
    1100:	98 2c       	mov	r9, r8
    1102:	21 2c       	mov	r2, r1
    1104:	a4 fe       	sbrs	r10, 4
    1106:	10 c0       	rjmp	.+32     	; 0x1128 <vfprintf+0x356>
    1108:	b6 01       	movw	r22, r12
    110a:	80 e3       	ldi	r24, 0x30	; 48
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	0e 94 12 0b 	call	0x1624	; 0x1624 <fputc>
    1112:	a2 fe       	sbrs	r10, 2
    1114:	17 c0       	rjmp	.+46     	; 0x1144 <vfprintf+0x372>
    1116:	a1 fc       	sbrc	r10, 1
    1118:	03 c0       	rjmp	.+6      	; 0x1120 <vfprintf+0x34e>
    111a:	88 e7       	ldi	r24, 0x78	; 120
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	02 c0       	rjmp	.+4      	; 0x1124 <vfprintf+0x352>
    1120:	88 e5       	ldi	r24, 0x58	; 88
    1122:	90 e0       	ldi	r25, 0x00	; 0
    1124:	b6 01       	movw	r22, r12
    1126:	0c c0       	rjmp	.+24     	; 0x1140 <vfprintf+0x36e>
    1128:	8a 2d       	mov	r24, r10
    112a:	86 78       	andi	r24, 0x86	; 134
    112c:	59 f0       	breq	.+22     	; 0x1144 <vfprintf+0x372>
    112e:	a1 fe       	sbrs	r10, 1
    1130:	02 c0       	rjmp	.+4      	; 0x1136 <vfprintf+0x364>
    1132:	8b e2       	ldi	r24, 0x2B	; 43
    1134:	01 c0       	rjmp	.+2      	; 0x1138 <vfprintf+0x366>
    1136:	80 e2       	ldi	r24, 0x20	; 32
    1138:	a7 fc       	sbrc	r10, 7
    113a:	8d e2       	ldi	r24, 0x2D	; 45
    113c:	b6 01       	movw	r22, r12
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	0e 94 12 0b 	call	0x1624	; 0x1624 <fputc>
    1144:	89 14       	cp	r8, r9
    1146:	38 f4       	brcc	.+14     	; 0x1156 <vfprintf+0x384>
    1148:	b6 01       	movw	r22, r12
    114a:	80 e3       	ldi	r24, 0x30	; 48
    114c:	90 e0       	ldi	r25, 0x00	; 0
    114e:	0e 94 12 0b 	call	0x1624	; 0x1624 <fputc>
    1152:	9a 94       	dec	r9
    1154:	f7 cf       	rjmp	.-18     	; 0x1144 <vfprintf+0x372>
    1156:	8a 94       	dec	r8
    1158:	f3 01       	movw	r30, r6
    115a:	e8 0d       	add	r30, r8
    115c:	f1 1d       	adc	r31, r1
    115e:	80 81       	ld	r24, Z
    1160:	b6 01       	movw	r22, r12
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	0e 94 12 0b 	call	0x1624	; 0x1624 <fputc>
    1168:	81 10       	cpse	r8, r1
    116a:	f5 cf       	rjmp	.-22     	; 0x1156 <vfprintf+0x384>
    116c:	22 20       	and	r2, r2
    116e:	09 f4       	brne	.+2      	; 0x1172 <vfprintf+0x3a0>
    1170:	42 ce       	rjmp	.-892    	; 0xdf6 <vfprintf+0x24>
    1172:	b6 01       	movw	r22, r12
    1174:	80 e2       	ldi	r24, 0x20	; 32
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	0e 94 12 0b 	call	0x1624	; 0x1624 <fputc>
    117c:	2a 94       	dec	r2
    117e:	f6 cf       	rjmp	.-20     	; 0x116c <vfprintf+0x39a>
    1180:	f6 01       	movw	r30, r12
    1182:	86 81       	ldd	r24, Z+6	; 0x06
    1184:	97 81       	ldd	r25, Z+7	; 0x07
    1186:	02 c0       	rjmp	.+4      	; 0x118c <vfprintf+0x3ba>
    1188:	8f ef       	ldi	r24, 0xFF	; 255
    118a:	9f ef       	ldi	r25, 0xFF	; 255
    118c:	2b 96       	adiw	r28, 0x0b	; 11
    118e:	e2 e1       	ldi	r30, 0x12	; 18
    1190:	0c 94 c8 0b 	jmp	0x1790	; 0x1790 <__epilogue_restores__>

00001194 <dtoa_prf>:
    1194:	a9 e0       	ldi	r26, 0x09	; 9
    1196:	b0 e0       	ldi	r27, 0x00	; 0
    1198:	e0 ed       	ldi	r30, 0xD0	; 208
    119a:	f8 e0       	ldi	r31, 0x08	; 8
    119c:	0c 94 b2 0b 	jmp	0x1764	; 0x1764 <__prologue_saves__+0xc>
    11a0:	6a 01       	movw	r12, r20
    11a2:	12 2f       	mov	r17, r18
    11a4:	b0 2e       	mov	r11, r16
    11a6:	2b e3       	ldi	r18, 0x3B	; 59
    11a8:	20 17       	cp	r18, r16
    11aa:	20 f0       	brcs	.+8      	; 0x11b4 <dtoa_prf+0x20>
    11ac:	ff 24       	eor	r15, r15
    11ae:	f3 94       	inc	r15
    11b0:	f0 0e       	add	r15, r16
    11b2:	02 c0       	rjmp	.+4      	; 0x11b8 <dtoa_prf+0x24>
    11b4:	2c e3       	ldi	r18, 0x3C	; 60
    11b6:	f2 2e       	mov	r15, r18
    11b8:	0f 2d       	mov	r16, r15
    11ba:	27 e0       	ldi	r18, 0x07	; 7
    11bc:	ae 01       	movw	r20, r28
    11be:	4f 5f       	subi	r20, 0xFF	; 255
    11c0:	5f 4f       	sbci	r21, 0xFF	; 255
    11c2:	0e 94 24 0a 	call	0x1448	; 0x1448 <__ftoa_engine>
    11c6:	bc 01       	movw	r22, r24
    11c8:	49 81       	ldd	r20, Y+1	; 0x01
    11ca:	84 2f       	mov	r24, r20
    11cc:	89 70       	andi	r24, 0x09	; 9
    11ce:	81 30       	cpi	r24, 0x01	; 1
    11d0:	31 f0       	breq	.+12     	; 0x11de <dtoa_prf+0x4a>
    11d2:	e1 fc       	sbrc	r14, 1
    11d4:	06 c0       	rjmp	.+12     	; 0x11e2 <dtoa_prf+0x4e>
    11d6:	e0 fe       	sbrs	r14, 0
    11d8:	06 c0       	rjmp	.+12     	; 0x11e6 <dtoa_prf+0x52>
    11da:	90 e2       	ldi	r25, 0x20	; 32
    11dc:	05 c0       	rjmp	.+10     	; 0x11e8 <dtoa_prf+0x54>
    11de:	9d e2       	ldi	r25, 0x2D	; 45
    11e0:	03 c0       	rjmp	.+6      	; 0x11e8 <dtoa_prf+0x54>
    11e2:	9b e2       	ldi	r25, 0x2B	; 43
    11e4:	01 c0       	rjmp	.+2      	; 0x11e8 <dtoa_prf+0x54>
    11e6:	90 e0       	ldi	r25, 0x00	; 0
    11e8:	5e 2d       	mov	r21, r14
    11ea:	50 71       	andi	r21, 0x10	; 16
    11ec:	43 ff       	sbrs	r20, 3
    11ee:	3c c0       	rjmp	.+120    	; 0x1268 <dtoa_prf+0xd4>
    11f0:	91 11       	cpse	r25, r1
    11f2:	02 c0       	rjmp	.+4      	; 0x11f8 <dtoa_prf+0x64>
    11f4:	83 e0       	ldi	r24, 0x03	; 3
    11f6:	01 c0       	rjmp	.+2      	; 0x11fa <dtoa_prf+0x66>
    11f8:	84 e0       	ldi	r24, 0x04	; 4
    11fa:	81 17       	cp	r24, r17
    11fc:	18 f4       	brcc	.+6      	; 0x1204 <dtoa_prf+0x70>
    11fe:	21 2f       	mov	r18, r17
    1200:	28 1b       	sub	r18, r24
    1202:	01 c0       	rjmp	.+2      	; 0x1206 <dtoa_prf+0x72>
    1204:	20 e0       	ldi	r18, 0x00	; 0
    1206:	51 11       	cpse	r21, r1
    1208:	0b c0       	rjmp	.+22     	; 0x1220 <dtoa_prf+0x8c>
    120a:	f6 01       	movw	r30, r12
    120c:	82 2f       	mov	r24, r18
    120e:	30 e2       	ldi	r19, 0x20	; 32
    1210:	88 23       	and	r24, r24
    1212:	19 f0       	breq	.+6      	; 0x121a <dtoa_prf+0x86>
    1214:	31 93       	st	Z+, r19
    1216:	81 50       	subi	r24, 0x01	; 1
    1218:	fb cf       	rjmp	.-10     	; 0x1210 <dtoa_prf+0x7c>
    121a:	c2 0e       	add	r12, r18
    121c:	d1 1c       	adc	r13, r1
    121e:	20 e0       	ldi	r18, 0x00	; 0
    1220:	99 23       	and	r25, r25
    1222:	29 f0       	breq	.+10     	; 0x122e <dtoa_prf+0x9a>
    1224:	d6 01       	movw	r26, r12
    1226:	9c 93       	st	X, r25
    1228:	f6 01       	movw	r30, r12
    122a:	31 96       	adiw	r30, 0x01	; 1
    122c:	6f 01       	movw	r12, r30
    122e:	c6 01       	movw	r24, r12
    1230:	03 96       	adiw	r24, 0x03	; 3
    1232:	e2 fe       	sbrs	r14, 2
    1234:	0a c0       	rjmp	.+20     	; 0x124a <dtoa_prf+0xb6>
    1236:	3e e4       	ldi	r19, 0x4E	; 78
    1238:	d6 01       	movw	r26, r12
    123a:	3c 93       	st	X, r19
    123c:	41 e4       	ldi	r20, 0x41	; 65
    123e:	11 96       	adiw	r26, 0x01	; 1
    1240:	4c 93       	st	X, r20
    1242:	11 97       	sbiw	r26, 0x01	; 1
    1244:	12 96       	adiw	r26, 0x02	; 2
    1246:	3c 93       	st	X, r19
    1248:	06 c0       	rjmp	.+12     	; 0x1256 <dtoa_prf+0xc2>
    124a:	3e e6       	ldi	r19, 0x6E	; 110
    124c:	f6 01       	movw	r30, r12
    124e:	30 83       	st	Z, r19
    1250:	41 e6       	ldi	r20, 0x61	; 97
    1252:	41 83       	std	Z+1, r20	; 0x01
    1254:	32 83       	std	Z+2, r19	; 0x02
    1256:	fc 01       	movw	r30, r24
    1258:	32 2f       	mov	r19, r18
    125a:	40 e2       	ldi	r20, 0x20	; 32
    125c:	33 23       	and	r19, r19
    125e:	09 f4       	brne	.+2      	; 0x1262 <dtoa_prf+0xce>
    1260:	42 c0       	rjmp	.+132    	; 0x12e6 <dtoa_prf+0x152>
    1262:	41 93       	st	Z+, r20
    1264:	31 50       	subi	r19, 0x01	; 1
    1266:	fa cf       	rjmp	.-12     	; 0x125c <dtoa_prf+0xc8>
    1268:	42 ff       	sbrs	r20, 2
    126a:	44 c0       	rjmp	.+136    	; 0x12f4 <dtoa_prf+0x160>
    126c:	91 11       	cpse	r25, r1
    126e:	02 c0       	rjmp	.+4      	; 0x1274 <dtoa_prf+0xe0>
    1270:	83 e0       	ldi	r24, 0x03	; 3
    1272:	01 c0       	rjmp	.+2      	; 0x1276 <dtoa_prf+0xe2>
    1274:	84 e0       	ldi	r24, 0x04	; 4
    1276:	81 17       	cp	r24, r17
    1278:	18 f4       	brcc	.+6      	; 0x1280 <dtoa_prf+0xec>
    127a:	21 2f       	mov	r18, r17
    127c:	28 1b       	sub	r18, r24
    127e:	01 c0       	rjmp	.+2      	; 0x1282 <dtoa_prf+0xee>
    1280:	20 e0       	ldi	r18, 0x00	; 0
    1282:	51 11       	cpse	r21, r1
    1284:	0b c0       	rjmp	.+22     	; 0x129c <dtoa_prf+0x108>
    1286:	f6 01       	movw	r30, r12
    1288:	82 2f       	mov	r24, r18
    128a:	30 e2       	ldi	r19, 0x20	; 32
    128c:	88 23       	and	r24, r24
    128e:	19 f0       	breq	.+6      	; 0x1296 <dtoa_prf+0x102>
    1290:	31 93       	st	Z+, r19
    1292:	81 50       	subi	r24, 0x01	; 1
    1294:	fb cf       	rjmp	.-10     	; 0x128c <dtoa_prf+0xf8>
    1296:	c2 0e       	add	r12, r18
    1298:	d1 1c       	adc	r13, r1
    129a:	20 e0       	ldi	r18, 0x00	; 0
    129c:	99 23       	and	r25, r25
    129e:	29 f0       	breq	.+10     	; 0x12aa <dtoa_prf+0x116>
    12a0:	d6 01       	movw	r26, r12
    12a2:	9c 93       	st	X, r25
    12a4:	f6 01       	movw	r30, r12
    12a6:	31 96       	adiw	r30, 0x01	; 1
    12a8:	6f 01       	movw	r12, r30
    12aa:	c6 01       	movw	r24, r12
    12ac:	03 96       	adiw	r24, 0x03	; 3
    12ae:	e2 fe       	sbrs	r14, 2
    12b0:	0b c0       	rjmp	.+22     	; 0x12c8 <dtoa_prf+0x134>
    12b2:	39 e4       	ldi	r19, 0x49	; 73
    12b4:	d6 01       	movw	r26, r12
    12b6:	3c 93       	st	X, r19
    12b8:	3e e4       	ldi	r19, 0x4E	; 78
    12ba:	11 96       	adiw	r26, 0x01	; 1
    12bc:	3c 93       	st	X, r19
    12be:	11 97       	sbiw	r26, 0x01	; 1
    12c0:	36 e4       	ldi	r19, 0x46	; 70
    12c2:	12 96       	adiw	r26, 0x02	; 2
    12c4:	3c 93       	st	X, r19
    12c6:	07 c0       	rjmp	.+14     	; 0x12d6 <dtoa_prf+0x142>
    12c8:	39 e6       	ldi	r19, 0x69	; 105
    12ca:	f6 01       	movw	r30, r12
    12cc:	30 83       	st	Z, r19
    12ce:	3e e6       	ldi	r19, 0x6E	; 110
    12d0:	31 83       	std	Z+1, r19	; 0x01
    12d2:	36 e6       	ldi	r19, 0x66	; 102
    12d4:	32 83       	std	Z+2, r19	; 0x02
    12d6:	fc 01       	movw	r30, r24
    12d8:	32 2f       	mov	r19, r18
    12da:	40 e2       	ldi	r20, 0x20	; 32
    12dc:	33 23       	and	r19, r19
    12de:	19 f0       	breq	.+6      	; 0x12e6 <dtoa_prf+0x152>
    12e0:	41 93       	st	Z+, r20
    12e2:	31 50       	subi	r19, 0x01	; 1
    12e4:	fb cf       	rjmp	.-10     	; 0x12dc <dtoa_prf+0x148>
    12e6:	fc 01       	movw	r30, r24
    12e8:	e2 0f       	add	r30, r18
    12ea:	f1 1d       	adc	r31, r1
    12ec:	10 82       	st	Z, r1
    12ee:	8e ef       	ldi	r24, 0xFE	; 254
    12f0:	9f ef       	ldi	r25, 0xFF	; 255
    12f2:	a6 c0       	rjmp	.+332    	; 0x1440 <dtoa_prf+0x2ac>
    12f4:	21 e0       	ldi	r18, 0x01	; 1
    12f6:	30 e0       	ldi	r19, 0x00	; 0
    12f8:	91 11       	cpse	r25, r1
    12fa:	02 c0       	rjmp	.+4      	; 0x1300 <dtoa_prf+0x16c>
    12fc:	20 e0       	ldi	r18, 0x00	; 0
    12fe:	30 e0       	ldi	r19, 0x00	; 0
    1300:	16 16       	cp	r1, r22
    1302:	17 06       	cpc	r1, r23
    1304:	1c f4       	brge	.+6      	; 0x130c <dtoa_prf+0x178>
    1306:	fb 01       	movw	r30, r22
    1308:	31 96       	adiw	r30, 0x01	; 1
    130a:	02 c0       	rjmp	.+4      	; 0x1310 <dtoa_prf+0x17c>
    130c:	e1 e0       	ldi	r30, 0x01	; 1
    130e:	f0 e0       	ldi	r31, 0x00	; 0
    1310:	2e 0f       	add	r18, r30
    1312:	3f 1f       	adc	r19, r31
    1314:	bb 20       	and	r11, r11
    1316:	21 f0       	breq	.+8      	; 0x1320 <dtoa_prf+0x18c>
    1318:	eb 2d       	mov	r30, r11
    131a:	f0 e0       	ldi	r31, 0x00	; 0
    131c:	31 96       	adiw	r30, 0x01	; 1
    131e:	02 c0       	rjmp	.+4      	; 0x1324 <dtoa_prf+0x190>
    1320:	e0 e0       	ldi	r30, 0x00	; 0
    1322:	f0 e0       	ldi	r31, 0x00	; 0
    1324:	2e 0f       	add	r18, r30
    1326:	3f 1f       	adc	r19, r31
    1328:	e1 2f       	mov	r30, r17
    132a:	f0 e0       	ldi	r31, 0x00	; 0
    132c:	2e 17       	cp	r18, r30
    132e:	3f 07       	cpc	r19, r31
    1330:	1c f4       	brge	.+6      	; 0x1338 <dtoa_prf+0x1a4>
    1332:	12 1b       	sub	r17, r18
    1334:	21 2f       	mov	r18, r17
    1336:	01 c0       	rjmp	.+2      	; 0x133a <dtoa_prf+0x1a6>
    1338:	20 e0       	ldi	r18, 0x00	; 0
    133a:	8e 2d       	mov	r24, r14
    133c:	88 71       	andi	r24, 0x18	; 24
    133e:	59 f4       	brne	.+22     	; 0x1356 <dtoa_prf+0x1c2>
    1340:	f6 01       	movw	r30, r12
    1342:	82 2f       	mov	r24, r18
    1344:	30 e2       	ldi	r19, 0x20	; 32
    1346:	88 23       	and	r24, r24
    1348:	19 f0       	breq	.+6      	; 0x1350 <dtoa_prf+0x1bc>
    134a:	31 93       	st	Z+, r19
    134c:	81 50       	subi	r24, 0x01	; 1
    134e:	fb cf       	rjmp	.-10     	; 0x1346 <dtoa_prf+0x1b2>
    1350:	c2 0e       	add	r12, r18
    1352:	d1 1c       	adc	r13, r1
    1354:	20 e0       	ldi	r18, 0x00	; 0
    1356:	99 23       	and	r25, r25
    1358:	29 f0       	breq	.+10     	; 0x1364 <dtoa_prf+0x1d0>
    135a:	d6 01       	movw	r26, r12
    135c:	9c 93       	st	X, r25
    135e:	f6 01       	movw	r30, r12
    1360:	31 96       	adiw	r30, 0x01	; 1
    1362:	6f 01       	movw	r12, r30
    1364:	51 11       	cpse	r21, r1
    1366:	0b c0       	rjmp	.+22     	; 0x137e <dtoa_prf+0x1ea>
    1368:	f6 01       	movw	r30, r12
    136a:	82 2f       	mov	r24, r18
    136c:	90 e3       	ldi	r25, 0x30	; 48
    136e:	88 23       	and	r24, r24
    1370:	19 f0       	breq	.+6      	; 0x1378 <dtoa_prf+0x1e4>
    1372:	91 93       	st	Z+, r25
    1374:	81 50       	subi	r24, 0x01	; 1
    1376:	fb cf       	rjmp	.-10     	; 0x136e <dtoa_prf+0x1da>
    1378:	c2 0e       	add	r12, r18
    137a:	d1 1c       	adc	r13, r1
    137c:	20 e0       	ldi	r18, 0x00	; 0
    137e:	0f 2d       	mov	r16, r15
    1380:	06 0f       	add	r16, r22
    1382:	9a 81       	ldd	r25, Y+2	; 0x02
    1384:	34 2f       	mov	r19, r20
    1386:	30 71       	andi	r19, 0x10	; 16
    1388:	44 ff       	sbrs	r20, 4
    138a:	03 c0       	rjmp	.+6      	; 0x1392 <dtoa_prf+0x1fe>
    138c:	91 33       	cpi	r25, 0x31	; 49
    138e:	09 f4       	brne	.+2      	; 0x1392 <dtoa_prf+0x1fe>
    1390:	01 50       	subi	r16, 0x01	; 1
    1392:	10 16       	cp	r1, r16
    1394:	24 f4       	brge	.+8      	; 0x139e <dtoa_prf+0x20a>
    1396:	09 30       	cpi	r16, 0x09	; 9
    1398:	18 f0       	brcs	.+6      	; 0x13a0 <dtoa_prf+0x20c>
    139a:	08 e0       	ldi	r16, 0x08	; 8
    139c:	01 c0       	rjmp	.+2      	; 0x13a0 <dtoa_prf+0x20c>
    139e:	01 e0       	ldi	r16, 0x01	; 1
    13a0:	ab 01       	movw	r20, r22
    13a2:	77 ff       	sbrs	r23, 7
    13a4:	02 c0       	rjmp	.+4      	; 0x13aa <dtoa_prf+0x216>
    13a6:	40 e0       	ldi	r20, 0x00	; 0
    13a8:	50 e0       	ldi	r21, 0x00	; 0
    13aa:	fb 01       	movw	r30, r22
    13ac:	e4 1b       	sub	r30, r20
    13ae:	f5 0b       	sbc	r31, r21
    13b0:	a1 e0       	ldi	r26, 0x01	; 1
    13b2:	b0 e0       	ldi	r27, 0x00	; 0
    13b4:	ac 0f       	add	r26, r28
    13b6:	bd 1f       	adc	r27, r29
    13b8:	ea 0f       	add	r30, r26
    13ba:	fb 1f       	adc	r31, r27
    13bc:	8e e2       	ldi	r24, 0x2E	; 46
    13be:	a8 2e       	mov	r10, r24
    13c0:	4b 01       	movw	r8, r22
    13c2:	80 1a       	sub	r8, r16
    13c4:	91 08       	sbc	r9, r1
    13c6:	0b 2d       	mov	r16, r11
    13c8:	10 e0       	ldi	r17, 0x00	; 0
    13ca:	11 95       	neg	r17
    13cc:	01 95       	neg	r16
    13ce:	11 09       	sbc	r17, r1
    13d0:	4f 3f       	cpi	r20, 0xFF	; 255
    13d2:	bf ef       	ldi	r27, 0xFF	; 255
    13d4:	5b 07       	cpc	r21, r27
    13d6:	21 f4       	brne	.+8      	; 0x13e0 <dtoa_prf+0x24c>
    13d8:	d6 01       	movw	r26, r12
    13da:	ac 92       	st	X, r10
    13dc:	11 96       	adiw	r26, 0x01	; 1
    13de:	6d 01       	movw	r12, r26
    13e0:	64 17       	cp	r22, r20
    13e2:	75 07       	cpc	r23, r21
    13e4:	2c f0       	brlt	.+10     	; 0x13f0 <dtoa_prf+0x25c>
    13e6:	84 16       	cp	r8, r20
    13e8:	95 06       	cpc	r9, r21
    13ea:	14 f4       	brge	.+4      	; 0x13f0 <dtoa_prf+0x25c>
    13ec:	81 81       	ldd	r24, Z+1	; 0x01
    13ee:	01 c0       	rjmp	.+2      	; 0x13f2 <dtoa_prf+0x25e>
    13f0:	80 e3       	ldi	r24, 0x30	; 48
    13f2:	41 50       	subi	r20, 0x01	; 1
    13f4:	51 09       	sbc	r21, r1
    13f6:	31 96       	adiw	r30, 0x01	; 1
    13f8:	d6 01       	movw	r26, r12
    13fa:	11 96       	adiw	r26, 0x01	; 1
    13fc:	7d 01       	movw	r14, r26
    13fe:	40 17       	cp	r20, r16
    1400:	51 07       	cpc	r21, r17
    1402:	24 f0       	brlt	.+8      	; 0x140c <dtoa_prf+0x278>
    1404:	d6 01       	movw	r26, r12
    1406:	8c 93       	st	X, r24
    1408:	67 01       	movw	r12, r14
    140a:	e2 cf       	rjmp	.-60     	; 0x13d0 <dtoa_prf+0x23c>
    140c:	64 17       	cp	r22, r20
    140e:	75 07       	cpc	r23, r21
    1410:	39 f4       	brne	.+14     	; 0x1420 <dtoa_prf+0x28c>
    1412:	96 33       	cpi	r25, 0x36	; 54
    1414:	20 f4       	brcc	.+8      	; 0x141e <dtoa_prf+0x28a>
    1416:	95 33       	cpi	r25, 0x35	; 53
    1418:	19 f4       	brne	.+6      	; 0x1420 <dtoa_prf+0x28c>
    141a:	31 11       	cpse	r19, r1
    141c:	01 c0       	rjmp	.+2      	; 0x1420 <dtoa_prf+0x28c>
    141e:	81 e3       	ldi	r24, 0x31	; 49
    1420:	f6 01       	movw	r30, r12
    1422:	80 83       	st	Z, r24
    1424:	f7 01       	movw	r30, r14
    1426:	82 2f       	mov	r24, r18
    1428:	90 e2       	ldi	r25, 0x20	; 32
    142a:	88 23       	and	r24, r24
    142c:	19 f0       	breq	.+6      	; 0x1434 <dtoa_prf+0x2a0>
    142e:	91 93       	st	Z+, r25
    1430:	81 50       	subi	r24, 0x01	; 1
    1432:	fb cf       	rjmp	.-10     	; 0x142a <dtoa_prf+0x296>
    1434:	f7 01       	movw	r30, r14
    1436:	e2 0f       	add	r30, r18
    1438:	f1 1d       	adc	r31, r1
    143a:	10 82       	st	Z, r1
    143c:	80 e0       	ldi	r24, 0x00	; 0
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	29 96       	adiw	r28, 0x09	; 9
    1442:	ec e0       	ldi	r30, 0x0C	; 12
    1444:	0c 94 ce 0b 	jmp	0x179c	; 0x179c <__epilogue_restores__+0xc>

00001448 <__ftoa_engine>:
    1448:	28 30       	cpi	r18, 0x08	; 8
    144a:	08 f0       	brcs	.+2      	; 0x144e <__ftoa_engine+0x6>
    144c:	27 e0       	ldi	r18, 0x07	; 7
    144e:	33 27       	eor	r19, r19
    1450:	da 01       	movw	r26, r20
    1452:	99 0f       	add	r25, r25
    1454:	31 1d       	adc	r19, r1
    1456:	87 fd       	sbrc	r24, 7
    1458:	91 60       	ori	r25, 0x01	; 1
    145a:	00 96       	adiw	r24, 0x00	; 0
    145c:	61 05       	cpc	r22, r1
    145e:	71 05       	cpc	r23, r1
    1460:	39 f4       	brne	.+14     	; 0x1470 <__ftoa_engine+0x28>
    1462:	32 60       	ori	r19, 0x02	; 2
    1464:	2e 5f       	subi	r18, 0xFE	; 254
    1466:	3d 93       	st	X+, r19
    1468:	30 e3       	ldi	r19, 0x30	; 48
    146a:	2a 95       	dec	r18
    146c:	e1 f7       	brne	.-8      	; 0x1466 <__ftoa_engine+0x1e>
    146e:	08 95       	ret
    1470:	9f 3f       	cpi	r25, 0xFF	; 255
    1472:	30 f0       	brcs	.+12     	; 0x1480 <__ftoa_engine+0x38>
    1474:	80 38       	cpi	r24, 0x80	; 128
    1476:	71 05       	cpc	r23, r1
    1478:	61 05       	cpc	r22, r1
    147a:	09 f0       	breq	.+2      	; 0x147e <__ftoa_engine+0x36>
    147c:	3c 5f       	subi	r19, 0xFC	; 252
    147e:	3c 5f       	subi	r19, 0xFC	; 252
    1480:	3d 93       	st	X+, r19
    1482:	91 30       	cpi	r25, 0x01	; 1
    1484:	08 f0       	brcs	.+2      	; 0x1488 <__ftoa_engine+0x40>
    1486:	80 68       	ori	r24, 0x80	; 128
    1488:	91 1d       	adc	r25, r1
    148a:	df 93       	push	r29
    148c:	cf 93       	push	r28
    148e:	1f 93       	push	r17
    1490:	0f 93       	push	r16
    1492:	ff 92       	push	r15
    1494:	ef 92       	push	r14
    1496:	19 2f       	mov	r17, r25
    1498:	98 7f       	andi	r25, 0xF8	; 248
    149a:	96 95       	lsr	r25
    149c:	e9 2f       	mov	r30, r25
    149e:	96 95       	lsr	r25
    14a0:	96 95       	lsr	r25
    14a2:	e9 0f       	add	r30, r25
    14a4:	ff 27       	eor	r31, r31
    14a6:	ee 53       	subi	r30, 0x3E	; 62
    14a8:	ff 4f       	sbci	r31, 0xFF	; 255
    14aa:	99 27       	eor	r25, r25
    14ac:	33 27       	eor	r19, r19
    14ae:	ee 24       	eor	r14, r14
    14b0:	ff 24       	eor	r15, r15
    14b2:	a7 01       	movw	r20, r14
    14b4:	e7 01       	movw	r28, r14
    14b6:	05 90       	lpm	r0, Z+
    14b8:	08 94       	sec
    14ba:	07 94       	ror	r0
    14bc:	28 f4       	brcc	.+10     	; 0x14c8 <__ftoa_engine+0x80>
    14be:	36 0f       	add	r19, r22
    14c0:	e7 1e       	adc	r14, r23
    14c2:	f8 1e       	adc	r15, r24
    14c4:	49 1f       	adc	r20, r25
    14c6:	51 1d       	adc	r21, r1
    14c8:	66 0f       	add	r22, r22
    14ca:	77 1f       	adc	r23, r23
    14cc:	88 1f       	adc	r24, r24
    14ce:	99 1f       	adc	r25, r25
    14d0:	06 94       	lsr	r0
    14d2:	a1 f7       	brne	.-24     	; 0x14bc <__ftoa_engine+0x74>
    14d4:	05 90       	lpm	r0, Z+
    14d6:	07 94       	ror	r0
    14d8:	28 f4       	brcc	.+10     	; 0x14e4 <__ftoa_engine+0x9c>
    14da:	e7 0e       	add	r14, r23
    14dc:	f8 1e       	adc	r15, r24
    14de:	49 1f       	adc	r20, r25
    14e0:	56 1f       	adc	r21, r22
    14e2:	c1 1d       	adc	r28, r1
    14e4:	77 0f       	add	r23, r23
    14e6:	88 1f       	adc	r24, r24
    14e8:	99 1f       	adc	r25, r25
    14ea:	66 1f       	adc	r22, r22
    14ec:	06 94       	lsr	r0
    14ee:	a1 f7       	brne	.-24     	; 0x14d8 <__ftoa_engine+0x90>
    14f0:	05 90       	lpm	r0, Z+
    14f2:	07 94       	ror	r0
    14f4:	28 f4       	brcc	.+10     	; 0x1500 <__ftoa_engine+0xb8>
    14f6:	f8 0e       	add	r15, r24
    14f8:	49 1f       	adc	r20, r25
    14fa:	56 1f       	adc	r21, r22
    14fc:	c7 1f       	adc	r28, r23
    14fe:	d1 1d       	adc	r29, r1
    1500:	88 0f       	add	r24, r24
    1502:	99 1f       	adc	r25, r25
    1504:	66 1f       	adc	r22, r22
    1506:	77 1f       	adc	r23, r23
    1508:	06 94       	lsr	r0
    150a:	a1 f7       	brne	.-24     	; 0x14f4 <__ftoa_engine+0xac>
    150c:	05 90       	lpm	r0, Z+
    150e:	07 94       	ror	r0
    1510:	20 f4       	brcc	.+8      	; 0x151a <__ftoa_engine+0xd2>
    1512:	49 0f       	add	r20, r25
    1514:	56 1f       	adc	r21, r22
    1516:	c7 1f       	adc	r28, r23
    1518:	d8 1f       	adc	r29, r24
    151a:	99 0f       	add	r25, r25
    151c:	66 1f       	adc	r22, r22
    151e:	77 1f       	adc	r23, r23
    1520:	88 1f       	adc	r24, r24
    1522:	06 94       	lsr	r0
    1524:	a9 f7       	brne	.-22     	; 0x1510 <__ftoa_engine+0xc8>
    1526:	84 91       	lpm	r24, Z
    1528:	10 95       	com	r17
    152a:	17 70       	andi	r17, 0x07	; 7
    152c:	41 f0       	breq	.+16     	; 0x153e <__ftoa_engine+0xf6>
    152e:	d6 95       	lsr	r29
    1530:	c7 95       	ror	r28
    1532:	57 95       	ror	r21
    1534:	47 95       	ror	r20
    1536:	f7 94       	ror	r15
    1538:	e7 94       	ror	r14
    153a:	1a 95       	dec	r17
    153c:	c1 f7       	brne	.-16     	; 0x152e <__ftoa_engine+0xe6>
    153e:	e8 e6       	ldi	r30, 0x68	; 104
    1540:	f0 e0       	ldi	r31, 0x00	; 0
    1542:	68 94       	set
    1544:	15 90       	lpm	r1, Z+
    1546:	15 91       	lpm	r17, Z+
    1548:	35 91       	lpm	r19, Z+
    154a:	65 91       	lpm	r22, Z+
    154c:	95 91       	lpm	r25, Z+
    154e:	05 90       	lpm	r0, Z+
    1550:	7f e2       	ldi	r23, 0x2F	; 47
    1552:	73 95       	inc	r23
    1554:	e1 18       	sub	r14, r1
    1556:	f1 0a       	sbc	r15, r17
    1558:	43 0b       	sbc	r20, r19
    155a:	56 0b       	sbc	r21, r22
    155c:	c9 0b       	sbc	r28, r25
    155e:	d0 09       	sbc	r29, r0
    1560:	c0 f7       	brcc	.-16     	; 0x1552 <__ftoa_engine+0x10a>
    1562:	e1 0c       	add	r14, r1
    1564:	f1 1e       	adc	r15, r17
    1566:	43 1f       	adc	r20, r19
    1568:	56 1f       	adc	r21, r22
    156a:	c9 1f       	adc	r28, r25
    156c:	d0 1d       	adc	r29, r0
    156e:	7e f4       	brtc	.+30     	; 0x158e <__ftoa_engine+0x146>
    1570:	70 33       	cpi	r23, 0x30	; 48
    1572:	11 f4       	brne	.+4      	; 0x1578 <__ftoa_engine+0x130>
    1574:	8a 95       	dec	r24
    1576:	e6 cf       	rjmp	.-52     	; 0x1544 <__ftoa_engine+0xfc>
    1578:	e8 94       	clt
    157a:	01 50       	subi	r16, 0x01	; 1
    157c:	30 f0       	brcs	.+12     	; 0x158a <__ftoa_engine+0x142>
    157e:	08 0f       	add	r16, r24
    1580:	0a f4       	brpl	.+2      	; 0x1584 <__ftoa_engine+0x13c>
    1582:	00 27       	eor	r16, r16
    1584:	02 17       	cp	r16, r18
    1586:	08 f4       	brcc	.+2      	; 0x158a <__ftoa_engine+0x142>
    1588:	20 2f       	mov	r18, r16
    158a:	23 95       	inc	r18
    158c:	02 2f       	mov	r16, r18
    158e:	7a 33       	cpi	r23, 0x3A	; 58
    1590:	28 f0       	brcs	.+10     	; 0x159c <__ftoa_engine+0x154>
    1592:	79 e3       	ldi	r23, 0x39	; 57
    1594:	7d 93       	st	X+, r23
    1596:	2a 95       	dec	r18
    1598:	e9 f7       	brne	.-6      	; 0x1594 <__ftoa_engine+0x14c>
    159a:	10 c0       	rjmp	.+32     	; 0x15bc <__ftoa_engine+0x174>
    159c:	7d 93       	st	X+, r23
    159e:	2a 95       	dec	r18
    15a0:	89 f6       	brne	.-94     	; 0x1544 <__ftoa_engine+0xfc>
    15a2:	06 94       	lsr	r0
    15a4:	97 95       	ror	r25
    15a6:	67 95       	ror	r22
    15a8:	37 95       	ror	r19
    15aa:	17 95       	ror	r17
    15ac:	17 94       	ror	r1
    15ae:	e1 18       	sub	r14, r1
    15b0:	f1 0a       	sbc	r15, r17
    15b2:	43 0b       	sbc	r20, r19
    15b4:	56 0b       	sbc	r21, r22
    15b6:	c9 0b       	sbc	r28, r25
    15b8:	d0 09       	sbc	r29, r0
    15ba:	98 f0       	brcs	.+38     	; 0x15e2 <__ftoa_engine+0x19a>
    15bc:	23 95       	inc	r18
    15be:	7e 91       	ld	r23, -X
    15c0:	73 95       	inc	r23
    15c2:	7a 33       	cpi	r23, 0x3A	; 58
    15c4:	08 f0       	brcs	.+2      	; 0x15c8 <__ftoa_engine+0x180>
    15c6:	70 e3       	ldi	r23, 0x30	; 48
    15c8:	7c 93       	st	X, r23
    15ca:	20 13       	cpse	r18, r16
    15cc:	b8 f7       	brcc	.-18     	; 0x15bc <__ftoa_engine+0x174>
    15ce:	7e 91       	ld	r23, -X
    15d0:	70 61       	ori	r23, 0x10	; 16
    15d2:	7d 93       	st	X+, r23
    15d4:	30 f0       	brcs	.+12     	; 0x15e2 <__ftoa_engine+0x19a>
    15d6:	83 95       	inc	r24
    15d8:	71 e3       	ldi	r23, 0x31	; 49
    15da:	7d 93       	st	X+, r23
    15dc:	70 e3       	ldi	r23, 0x30	; 48
    15de:	2a 95       	dec	r18
    15e0:	e1 f7       	brne	.-8      	; 0x15da <__ftoa_engine+0x192>
    15e2:	11 24       	eor	r1, r1
    15e4:	ef 90       	pop	r14
    15e6:	ff 90       	pop	r15
    15e8:	0f 91       	pop	r16
    15ea:	1f 91       	pop	r17
    15ec:	cf 91       	pop	r28
    15ee:	df 91       	pop	r29
    15f0:	99 27       	eor	r25, r25
    15f2:	87 fd       	sbrc	r24, 7
    15f4:	90 95       	com	r25
    15f6:	08 95       	ret

000015f8 <strnlen_P>:
    15f8:	fc 01       	movw	r30, r24
    15fa:	05 90       	lpm	r0, Z+
    15fc:	61 50       	subi	r22, 0x01	; 1
    15fe:	70 40       	sbci	r23, 0x00	; 0
    1600:	01 10       	cpse	r0, r1
    1602:	d8 f7       	brcc	.-10     	; 0x15fa <strnlen_P+0x2>
    1604:	80 95       	com	r24
    1606:	90 95       	com	r25
    1608:	8e 0f       	add	r24, r30
    160a:	9f 1f       	adc	r25, r31
    160c:	08 95       	ret

0000160e <strnlen>:
    160e:	fc 01       	movw	r30, r24
    1610:	61 50       	subi	r22, 0x01	; 1
    1612:	70 40       	sbci	r23, 0x00	; 0
    1614:	01 90       	ld	r0, Z+
    1616:	01 10       	cpse	r0, r1
    1618:	d8 f7       	brcc	.-10     	; 0x1610 <strnlen+0x2>
    161a:	80 95       	com	r24
    161c:	90 95       	com	r25
    161e:	8e 0f       	add	r24, r30
    1620:	9f 1f       	adc	r25, r31
    1622:	08 95       	ret

00001624 <fputc>:
    1624:	0f 93       	push	r16
    1626:	1f 93       	push	r17
    1628:	cf 93       	push	r28
    162a:	df 93       	push	r29
    162c:	fb 01       	movw	r30, r22
    162e:	23 81       	ldd	r18, Z+3	; 0x03
    1630:	21 fd       	sbrc	r18, 1
    1632:	03 c0       	rjmp	.+6      	; 0x163a <fputc+0x16>
    1634:	8f ef       	ldi	r24, 0xFF	; 255
    1636:	9f ef       	ldi	r25, 0xFF	; 255
    1638:	2c c0       	rjmp	.+88     	; 0x1692 <fputc+0x6e>
    163a:	22 ff       	sbrs	r18, 2
    163c:	16 c0       	rjmp	.+44     	; 0x166a <fputc+0x46>
    163e:	46 81       	ldd	r20, Z+6	; 0x06
    1640:	57 81       	ldd	r21, Z+7	; 0x07
    1642:	24 81       	ldd	r18, Z+4	; 0x04
    1644:	35 81       	ldd	r19, Z+5	; 0x05
    1646:	42 17       	cp	r20, r18
    1648:	53 07       	cpc	r21, r19
    164a:	44 f4       	brge	.+16     	; 0x165c <fputc+0x38>
    164c:	a0 81       	ld	r26, Z
    164e:	b1 81       	ldd	r27, Z+1	; 0x01
    1650:	9d 01       	movw	r18, r26
    1652:	2f 5f       	subi	r18, 0xFF	; 255
    1654:	3f 4f       	sbci	r19, 0xFF	; 255
    1656:	31 83       	std	Z+1, r19	; 0x01
    1658:	20 83       	st	Z, r18
    165a:	8c 93       	st	X, r24
    165c:	26 81       	ldd	r18, Z+6	; 0x06
    165e:	37 81       	ldd	r19, Z+7	; 0x07
    1660:	2f 5f       	subi	r18, 0xFF	; 255
    1662:	3f 4f       	sbci	r19, 0xFF	; 255
    1664:	37 83       	std	Z+7, r19	; 0x07
    1666:	26 83       	std	Z+6, r18	; 0x06
    1668:	14 c0       	rjmp	.+40     	; 0x1692 <fputc+0x6e>
    166a:	8b 01       	movw	r16, r22
    166c:	ec 01       	movw	r28, r24
    166e:	fb 01       	movw	r30, r22
    1670:	00 84       	ldd	r0, Z+8	; 0x08
    1672:	f1 85       	ldd	r31, Z+9	; 0x09
    1674:	e0 2d       	mov	r30, r0
    1676:	09 95       	icall
    1678:	89 2b       	or	r24, r25
    167a:	e1 f6       	brne	.-72     	; 0x1634 <fputc+0x10>
    167c:	d8 01       	movw	r26, r16
    167e:	16 96       	adiw	r26, 0x06	; 6
    1680:	8d 91       	ld	r24, X+
    1682:	9c 91       	ld	r25, X
    1684:	17 97       	sbiw	r26, 0x07	; 7
    1686:	01 96       	adiw	r24, 0x01	; 1
    1688:	17 96       	adiw	r26, 0x07	; 7
    168a:	9c 93       	st	X, r25
    168c:	8e 93       	st	-X, r24
    168e:	16 97       	sbiw	r26, 0x06	; 6
    1690:	ce 01       	movw	r24, r28
    1692:	df 91       	pop	r29
    1694:	cf 91       	pop	r28
    1696:	1f 91       	pop	r17
    1698:	0f 91       	pop	r16
    169a:	08 95       	ret

0000169c <__ultoa_invert>:
    169c:	fa 01       	movw	r30, r20
    169e:	aa 27       	eor	r26, r26
    16a0:	28 30       	cpi	r18, 0x08	; 8
    16a2:	51 f1       	breq	.+84     	; 0x16f8 <__ultoa_invert+0x5c>
    16a4:	20 31       	cpi	r18, 0x10	; 16
    16a6:	81 f1       	breq	.+96     	; 0x1708 <__ultoa_invert+0x6c>
    16a8:	e8 94       	clt
    16aa:	6f 93       	push	r22
    16ac:	6e 7f       	andi	r22, 0xFE	; 254
    16ae:	6e 5f       	subi	r22, 0xFE	; 254
    16b0:	7f 4f       	sbci	r23, 0xFF	; 255
    16b2:	8f 4f       	sbci	r24, 0xFF	; 255
    16b4:	9f 4f       	sbci	r25, 0xFF	; 255
    16b6:	af 4f       	sbci	r26, 0xFF	; 255
    16b8:	b1 e0       	ldi	r27, 0x01	; 1
    16ba:	3e d0       	rcall	.+124    	; 0x1738 <__ultoa_invert+0x9c>
    16bc:	b4 e0       	ldi	r27, 0x04	; 4
    16be:	3c d0       	rcall	.+120    	; 0x1738 <__ultoa_invert+0x9c>
    16c0:	67 0f       	add	r22, r23
    16c2:	78 1f       	adc	r23, r24
    16c4:	89 1f       	adc	r24, r25
    16c6:	9a 1f       	adc	r25, r26
    16c8:	a1 1d       	adc	r26, r1
    16ca:	68 0f       	add	r22, r24
    16cc:	79 1f       	adc	r23, r25
    16ce:	8a 1f       	adc	r24, r26
    16d0:	91 1d       	adc	r25, r1
    16d2:	a1 1d       	adc	r26, r1
    16d4:	6a 0f       	add	r22, r26
    16d6:	71 1d       	adc	r23, r1
    16d8:	81 1d       	adc	r24, r1
    16da:	91 1d       	adc	r25, r1
    16dc:	a1 1d       	adc	r26, r1
    16de:	20 d0       	rcall	.+64     	; 0x1720 <__ultoa_invert+0x84>
    16e0:	09 f4       	brne	.+2      	; 0x16e4 <__ultoa_invert+0x48>
    16e2:	68 94       	set
    16e4:	3f 91       	pop	r19
    16e6:	2a e0       	ldi	r18, 0x0A	; 10
    16e8:	26 9f       	mul	r18, r22
    16ea:	11 24       	eor	r1, r1
    16ec:	30 19       	sub	r19, r0
    16ee:	30 5d       	subi	r19, 0xD0	; 208
    16f0:	31 93       	st	Z+, r19
    16f2:	de f6       	brtc	.-74     	; 0x16aa <__ultoa_invert+0xe>
    16f4:	cf 01       	movw	r24, r30
    16f6:	08 95       	ret
    16f8:	46 2f       	mov	r20, r22
    16fa:	47 70       	andi	r20, 0x07	; 7
    16fc:	40 5d       	subi	r20, 0xD0	; 208
    16fe:	41 93       	st	Z+, r20
    1700:	b3 e0       	ldi	r27, 0x03	; 3
    1702:	0f d0       	rcall	.+30     	; 0x1722 <__ultoa_invert+0x86>
    1704:	c9 f7       	brne	.-14     	; 0x16f8 <__ultoa_invert+0x5c>
    1706:	f6 cf       	rjmp	.-20     	; 0x16f4 <__ultoa_invert+0x58>
    1708:	46 2f       	mov	r20, r22
    170a:	4f 70       	andi	r20, 0x0F	; 15
    170c:	40 5d       	subi	r20, 0xD0	; 208
    170e:	4a 33       	cpi	r20, 0x3A	; 58
    1710:	18 f0       	brcs	.+6      	; 0x1718 <__ultoa_invert+0x7c>
    1712:	49 5d       	subi	r20, 0xD9	; 217
    1714:	31 fd       	sbrc	r19, 1
    1716:	40 52       	subi	r20, 0x20	; 32
    1718:	41 93       	st	Z+, r20
    171a:	02 d0       	rcall	.+4      	; 0x1720 <__ultoa_invert+0x84>
    171c:	a9 f7       	brne	.-22     	; 0x1708 <__ultoa_invert+0x6c>
    171e:	ea cf       	rjmp	.-44     	; 0x16f4 <__ultoa_invert+0x58>
    1720:	b4 e0       	ldi	r27, 0x04	; 4
    1722:	a6 95       	lsr	r26
    1724:	97 95       	ror	r25
    1726:	87 95       	ror	r24
    1728:	77 95       	ror	r23
    172a:	67 95       	ror	r22
    172c:	ba 95       	dec	r27
    172e:	c9 f7       	brne	.-14     	; 0x1722 <__ultoa_invert+0x86>
    1730:	00 97       	sbiw	r24, 0x00	; 0
    1732:	61 05       	cpc	r22, r1
    1734:	71 05       	cpc	r23, r1
    1736:	08 95       	ret
    1738:	9b 01       	movw	r18, r22
    173a:	ac 01       	movw	r20, r24
    173c:	0a 2e       	mov	r0, r26
    173e:	06 94       	lsr	r0
    1740:	57 95       	ror	r21
    1742:	47 95       	ror	r20
    1744:	37 95       	ror	r19
    1746:	27 95       	ror	r18
    1748:	ba 95       	dec	r27
    174a:	c9 f7       	brne	.-14     	; 0x173e <__ultoa_invert+0xa2>
    174c:	62 0f       	add	r22, r18
    174e:	73 1f       	adc	r23, r19
    1750:	84 1f       	adc	r24, r20
    1752:	95 1f       	adc	r25, r21
    1754:	a0 1d       	adc	r26, r0
    1756:	08 95       	ret

00001758 <__prologue_saves__>:
    1758:	2f 92       	push	r2
    175a:	3f 92       	push	r3
    175c:	4f 92       	push	r4
    175e:	5f 92       	push	r5
    1760:	6f 92       	push	r6
    1762:	7f 92       	push	r7
    1764:	8f 92       	push	r8
    1766:	9f 92       	push	r9
    1768:	af 92       	push	r10
    176a:	bf 92       	push	r11
    176c:	cf 92       	push	r12
    176e:	df 92       	push	r13
    1770:	ef 92       	push	r14
    1772:	ff 92       	push	r15
    1774:	0f 93       	push	r16
    1776:	1f 93       	push	r17
    1778:	cf 93       	push	r28
    177a:	df 93       	push	r29
    177c:	cd b7       	in	r28, 0x3d	; 61
    177e:	de b7       	in	r29, 0x3e	; 62
    1780:	ca 1b       	sub	r28, r26
    1782:	db 0b       	sbc	r29, r27
    1784:	0f b6       	in	r0, 0x3f	; 63
    1786:	f8 94       	cli
    1788:	de bf       	out	0x3e, r29	; 62
    178a:	0f be       	out	0x3f, r0	; 63
    178c:	cd bf       	out	0x3d, r28	; 61
    178e:	09 94       	ijmp

00001790 <__epilogue_restores__>:
    1790:	2a 88       	ldd	r2, Y+18	; 0x12
    1792:	39 88       	ldd	r3, Y+17	; 0x11
    1794:	48 88       	ldd	r4, Y+16	; 0x10
    1796:	5f 84       	ldd	r5, Y+15	; 0x0f
    1798:	6e 84       	ldd	r6, Y+14	; 0x0e
    179a:	7d 84       	ldd	r7, Y+13	; 0x0d
    179c:	8c 84       	ldd	r8, Y+12	; 0x0c
    179e:	9b 84       	ldd	r9, Y+11	; 0x0b
    17a0:	aa 84       	ldd	r10, Y+10	; 0x0a
    17a2:	b9 84       	ldd	r11, Y+9	; 0x09
    17a4:	c8 84       	ldd	r12, Y+8	; 0x08
    17a6:	df 80       	ldd	r13, Y+7	; 0x07
    17a8:	ee 80       	ldd	r14, Y+6	; 0x06
    17aa:	fd 80       	ldd	r15, Y+5	; 0x05
    17ac:	0c 81       	ldd	r16, Y+4	; 0x04
    17ae:	1b 81       	ldd	r17, Y+3	; 0x03
    17b0:	aa 81       	ldd	r26, Y+2	; 0x02
    17b2:	b9 81       	ldd	r27, Y+1	; 0x01
    17b4:	ce 0f       	add	r28, r30
    17b6:	d1 1d       	adc	r29, r1
    17b8:	0f b6       	in	r0, 0x3f	; 63
    17ba:	f8 94       	cli
    17bc:	de bf       	out	0x3e, r29	; 62
    17be:	0f be       	out	0x3f, r0	; 63
    17c0:	cd bf       	out	0x3d, r28	; 61
    17c2:	ed 01       	movw	r28, r26
    17c4:	08 95       	ret

000017c6 <_exit>:
    17c6:	f8 94       	cli

000017c8 <__stop_program>:
    17c8:	ff cf       	rjmp	.-2      	; 0x17c8 <__stop_program>
